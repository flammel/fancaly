{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAsJ,YAAY,CAAC;;AAAnK,IAAI,QAAQ,GAAG,IAAI,AAAC;AAAA,IAAI,QAAQ,GAAG,IAAI,AAAC;AAAA,IAAI,UAAU,GAAG,KAAK,AAAC;AAAA,IAAI,YAAY,GAAG,kBAAkB,AAAC;AAAA,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,kBAAkB,CAAC;AAEtJ,+JAA+J,CAE/J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6CE,CACF,IAAI,UAAU,GAAG,4BAA4B,AAAC;AAC9C,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,AAAC;AAErC,SAAS,MAAM,CAAC,UAAU,EAAE;IAC1B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACjC,IAAI,CAAC,GAAG,GAAG;QACT,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;QAC3B,gBAAgB,EAAE,EAAE;QACpB,iBAAiB,EAAE,EAAE;QACrB,MAAM,EAAE,SAAU,EAAE,EAAE;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,WAAY,EAAE,CAAC,CAAC;SAClD;QACD,OAAO,EAAE,SAAU,EAAE,EAAE;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACjC;KACF,CAAC;IACF,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;CACnC;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,IAAI,aAAa,EAEf,cAAc,EAEd,cAAc,CAChB,qCAAqC,CADrB,AAEf;AAED,SAAS,WAAW,GAAG;IACrB,OAAO,QAAQ,IAAK,CAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAA,AAAC,CAAC;CAChG;AAED,SAAS,OAAO,GAAG;IACjB,OAAO,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC;CAClC,CAAC,wCAAwC;AAG1C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,AAAC;AAElC,IAAI,AAAC,CAAA,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAAA,IAAK,OAAO,SAAS,KAAK,WAAW,EAAE;IAC5E,IAAI,QAAQ,GAAG,WAAW,EAAE,AAAC;IAC7B,IAAI,IAAI,GAAG,OAAO,EAAE,AAAC;IACrB,IAAI,QAAQ,GAAG,UAAU,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,IAAI,CAAC,8BAA8B,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,IAAI,AAAC;IAC3H,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAI,CAAA,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA,GAAI,GAAG,CAAC,AAAC,EAAC,wBAAwB;IAE9G,IAAI,MAAM,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,AAAC,EAAC,oDAAoD;IAC3J,0DAA0D;IAE1D,IAAI,iBAAiB,GAAG,KAAK,AAAC;IAE9B,IAAI;QACD,CAAA,GAAG,IAAI,CAAA,CAAE,gDAAgD,CAAC,CAAC;KAC7D,CAAC,OAAO,GAAG,EAAE;QACZ,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACnD,CAAC,aAAa;IAGf,EAAE,CAAC,SAAS,GAAG,eAAgB,KAAK,EAElC;QACA,aAAa,GAAG,EAAE,CAClB,4BAA4B,CADV,CAEjB;QACD,cAAc,GAAG,EAAE,CACnB,4BAA4B,CADT,CAElB;QACD,cAAc,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,GAEN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC1B,uCAAuC;YACvC,IAAI,OAAO,QAAQ,KAAK,WAAW,EACjC,kBAAkB,EAAE,CAAC;YAGvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,KAAK,GAAI,KAAK,CAAC,OAAO,KAAK,YAAY,CAAC,AAAC,EAAC,oBAAoB;YAE9F,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA,KAAK,GAAI;gBAClC,OAAO,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;aACxH,CAAC,AAAC;YAEH,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,yEAAyE;gBAE1F,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,WAAW,KAAK,WAAW,EACrE,MAAM,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAG3D,MAAM,eAAe,CAAC,MAAM,CAAC,CAAC;gBAE9B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;oBAC9C,IAAI,EAAE,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;oBAE9B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EACrB,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBAE1C;aACF,MAAM,UAAU,EAAE,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,+BAA+B;YAC/B,KAAK,IAAI,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,KAAK,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK,AAAC;gBACvF,OAAO,CAAC,KAAK,CAAC,yBAAc,GAAG,cAAc,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAClH;YAED,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;gBACnC,gCAAgC;gBAChC,kBAAkB,EAAE,CAAC;gBACrB,IAAI,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,AAAC,EAAC,aAAa;gBAEtE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aACpC;SACF;KACF,CAAC;IAEF,EAAE,CAAC,OAAO,GAAG,SAAU,CAAC,EAAE;QACxB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KAC1B,CAAC;IAEF,EAAE,CAAC,OAAO,GAAG,WAAY;QACvB,OAAO,CAAC,IAAI,CAAC,6DAAkD,CAAC,CAAC;KAClE,CAAC;CACH;AAED,SAAS,kBAAkB,GAAG;IAC5B,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,AAAC;IAElD,IAAI,OAAO,EAAE;QACX,OAAO,CAAC,MAAM,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;KAC1C;CACF;AAED,SAAS,kBAAkB,CAAC,WAAW,EAAE;IACvC,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;IAC5C,OAAO,CAAC,EAAE,GAAG,UAAU,CAAC;IACxB,IAAI,SAAS,GAAG,wNAAwN,AAAC;IAEzO,KAAK,IAAI,UAAU,IAAI,WAAW,CAAE;QAClC,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,GAAK;YAC5E,OAAO,CAAC,EAAE,CAAC,CAAC;sCACoB,EAAE,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,2FAA2F,EAAE,KAAK,CAAC,QAAQ,CAAC;AACvL,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACV,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,AAAC;QAC1B,SAAS,IAAI,CAAC;;;YAGN,EAAE,UAAU,CAAC,OAAO,CAAC;;aAEpB,EAAE,KAAK,CAAC;;UAEX,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA,IAAI,GAAI,oBAAS,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;QAEvE,EAAE,UAAU,CAAC,aAAa,GAAG,CAAC,sCAAsC,EAAE,UAAU,CAAC,aAAa,CAAC,sCAAsC,CAAC,GAAG,EAAE,CAAC;;IAEhJ,CAAC,CAAC;KACH;IAED,SAAS,IAAI,QAAQ,CAAC;IACtB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;IAC9B,OAAO,OAAO,CAAC;CAChB;AAED,SAAS,UAAU,GAAG;IACpB,IAAI,QAAQ,IAAI,QAAQ,EACtB,QAAQ,CAAC,MAAM,EAAE,CAAC;SACb,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,EAC1D,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;CAE3B;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,EAAE,EAC9B,qCAAqC,CACrC;IACE,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO,EAAE,CAAC;IAGZ,IAAI,OAAO,GAAG,EAAE,AAAC;IACjB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,AAAC;IAEd,IAAK,CAAC,IAAI,OAAO,CACf,IAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QACvB,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvB,IAAI,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,EAChE,OAAO,CAAC,IAAI,CAAC;YAAC,MAAM;YAAE,CAAC;SAAC,CAAC,CAAC;KAE7B;IAGH,IAAI,MAAM,CAAC,MAAM,EACf,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;IAG1D,OAAO,OAAO,CAAC;CAChB;AAED,SAAS,UAAU,CAAC,IAAI,EAAE;IACxB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,AAAC;IAE/B,OAAO,CAAC,MAAM,GAAG,WAAY;QAC3B,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAC1B,aAAa;QACb,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KAErC,CAAC;IAEF,OAAO,CAAC,YAAY,CAAC,MAAM,EAC3B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,aAAa;IAE1E,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;CACzD;AAED,IAAI,UAAU,GAAG,IAAI,AAAC;AAEtB,SAAS,SAAS,GAAG;IACnB,IAAI,UAAU,EACZ,OAAO;IAGT,UAAU,GAAG,UAAU,CAAC,WAAY;QAClC,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,AAAC;QAEhE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACrC,gCAAgC;YAChC,IAAI,IAAI,GAEN,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,AAAC;YAChC,IAAI,QAAQ,GAAG,WAAW,EAAE,AAAC;YAC7B,IAAI,mBAAmB,GAAG,QAAQ,KAAK,WAAW,GAAG,IAAI,MAAM,CAAC,gDAAgD,GAAG,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,EAAE,CAAC,AAAC;YACpL,IAAI,QAAQ,GAAG,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,AAAC;YAEzG,IAAI,CAAC,QAAQ,EACX,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAExB;QAED,UAAU,GAAG,IAAI,CAAC;KACnB,EAAE,EAAE,CAAC,CAAC;CACR;AAED,SAAS,WAAW,CAAC,KAAK,EAAE;IAC1B,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;QACvB,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;YAC9C,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE5C,IAAI,KAAK,CAAC,YAAY,KAAK,UAAU,EACnC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;YAGzB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,GAAK;gBACtC,IAAI,cAAc,AAAC;gBAEnB,MAAM,CAAC,MAAM,GAAG,IAAM,OAAO,CAAC,MAAM,CAAC,CAAC;gBAEtC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;gBACvB,CAAA,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAA,KAAM,IAAI,IAAI,cAAc,KAAK,KAAK,CAAC,IAAY,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACtH,CAAC,CAAC;SACJ,MAAM,IAAI,OAAO,aAAa,KAAK,UAAU,EAAE;YAC9C,iBAAiB;YACjB,IAAI,KAAK,CAAC,YAAY,KAAK,UAAU,EACnC,OAAO,OAAmB,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;iBAE1D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,GAAK;gBACtC,IAAI;oBACF,cAA0B,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAE1D,OAAO,EAAE,CAAC;iBACX,CAAC,OAAO,GAAG,EAAE;oBACZ,MAAM,CAAC,GAAG,CAAC,CAAC;iBACb;aACF,CAAC,CAAC;SAEN;KACF;CACF;AAED,eAAe,eAAe,CAAC,MAAM,EAAE;IACrC,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAI,eAAe,AAAC;IAEpB,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,iBAAiB,EAAE;YACtB,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA,KAAK,GAAI;gBACjC,IAAI,YAAY,AAAC;gBAEjB,OAAO,AAAC,CAAA,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAA,KAAM,IAAI,IAAI,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAA,GAAG,GAAI;oBAClH,oCAAoC;oBACpC,oEAAoE;oBACpE,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,gBAAgB,IAAI,CAAC,EAAE;wBAClF,IAAI,OAAO,wBAAwB,IAAI,WAAW,IAAI,MAAM,YAAY,wBAAwB,EAAE;4BAChG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;4BACxB,OAAO;yBACR;wBAED,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,4BAA4B,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBACrH,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;qBAC3B;oBAED,MAAM,GAAG,CAAC;iBACX,CAAC,CAAC;aACJ,CAAC,AAAC;YACH,eAAe,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC/C;QAED,MAAM,CAAC,OAAO,CAAC,SAAU,KAAK,EAAE;YAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACrC,CAAC,CAAC;KACJ,QAAS;QACR,OAAO,MAAM,CAAC,eAAe,CAAC;QAE9B,IAAI,eAAe,EACjB,eAAe,CAAC,OAAO,CAAC,CAAA,MAAM,GAAI;YAChC,IAAI,MAAM,EAAE;gBACV,IAAI,eAAe,AAAC;gBAEnB,CAAA,eAAe,GAAG,QAAQ,CAAC,IAAI,CAAA,KAAM,IAAI,IAAI,eAAe,KAAK,KAAK,CAAC,IAAY,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACzH;SACF,CAAC,CAAC;KAEN;CACF;AAED,SAAS,QAAQ,CAAC,MAAM,EAEtB,KAAK,EAEL;IACA,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EACtB,SAAS,EAAE,CAAC;SACP,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;QAC9B,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,AAAC;QAEpD,IAAI,IAAI,EAAE;YACR,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,AAAC;gBAEnC,IAAK,IAAI,GAAG,IAAI,OAAO,CACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC5C,IAAI,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,AAAC;oBACtB,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,AAAC;oBAEjD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EACtB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;iBAErC;aAEJ;YAED,IAAI,iBAAiB,EACnB,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAI,CAAA,CAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,aAAa;YAGf,IAAI,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;YAC1C,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;gBAAC,EAAE;gBAAE,IAAI;aAAC,CAAC;SAChC,MAAM,IAAI,MAAM,CAAC,MAAM,EACtB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAElC;CACF;AAED,SAAS,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE;IAC7B,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;QACf,8EAA8E;QAC9E,IAAI,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,AAAC;QAC1B,IAAI,OAAO,GAAG,EAAE,AAAC;QAEjB,IAAK,IAAI,GAAG,IAAI,IAAI,CAAE;YACpB,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,AAAC;YAExD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EACtB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAE3B,CAAC,sGAAsG;QAGxG,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC;QACnB,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QAEnD,OAAO,CAAC,OAAO,CAAC,CAAA,EAAE,GAAI;YACpB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ,MAAM,IAAI,MAAM,CAAC,MAAM,EACtB,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;CAEhC;AAED,SAAS,cAAc,CAAC,MAAM,EAE5B,EAAE,EAEF,YAAY,EAEZ;IACA,IAAI,iBAAiB,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,EAC7C,OAAO,IAAI,CAAC;IACb,CAAC,uGAAuG;IAGzG,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,AAAC;IACjD,IAAI,QAAQ,GAAG,KAAK,AAAC;IAErB,MAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE;QACzB,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,EAAE,AAAC;QACxB,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,AAAC;QAE5C,IAAI,CAAC,EACH,+EAA+E;QAC/E,QAAQ,GAAG,IAAI,CAAC;aACX;YACL,yDAAyD;YACzD,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC;YAE7C,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClB,kFAAkF;gBAClF,QAAQ,GAAG,KAAK,CAAC;gBACjB,MAAM;aACP;YAED,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;SACpB;KACF;IAED,OAAO,QAAQ,CAAC;CACjB;AAED,SAAS,iBAAiB,CAAC,MAAM,EAE/B,EAAE,EAEF,YAAY,EAEZ;IACA,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,AAAC;IAE7B,IAAI,CAAC,OAAO,EACV,OAAO;IAGT,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,MAAM,CAAC,MAAM,EAChB,OAAO,IAAI,CAAC;QAGd,OAAO,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;KACxD;IAED,IAAI,aAAa,CAAC,EAAE,CAAC,EACnB,OAAO,IAAI,CAAC;IAGd,aAAa,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IACzB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;IAC9B,cAAc,CAAC,IAAI,CAAC;QAAC,MAAM;QAAE,EAAE;KAAC,CAAC,CAAC;IAElC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC7D,OAAO,IAAI,CAAC;CAEf;AAED,SAAS,YAAY,CAAC,MAAM,EAE1B,EAAE,EAEF;IACA,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,AAAC;IAC9B,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;IAEpB,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,EACtB,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC;IAGnC,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QACjD,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACpB,CAAC,CAAC;IAGL,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACxB,MAAM,CAAC,EAAE,CAAC,CAAC;IACX,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAE1B,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE,EAAE;QAChD,IAAI,kBAAkB,GAAG,EAAE,CAAC,WAAY;YACtC,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAC3C,CAAC,AAAC;QAEH,IAAI,kBAAkB,IAAI,cAAc,CAAC,MAAM,EAC7C,+BAA+B;QAC/B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;KAEjE,CAAC,CAAC;IAGL,cAAc,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;CAC3B;;;ACnkBD,oCAAmC;AACnC,mCAAoC;AAEpC,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,AAAuB,AAAC;AACxE,MAAM,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,AAAuB,AAAC;AAE1E,MAAM,QAAQ,GAAG,CAAC,EAAiB,EAAE,EAAU,GAAK;IAChD,IAAI,SAAS,AAAQ,AAAC;IACtB,OAAO,IAAM;QACT,YAAY,CAAC,SAAS,CAAC,CAAC;QACxB,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;KACzC,CAAC;CACL,AAAC;AAEF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,IAAM;IACrC,QAAQ,CAAC,KAAK,GAAG,CAAA,GAAA,gBAAO,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAA,GAAA,gBAAM,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CACvD,EAAE,GAAG,CAAC,AAAC;AAER,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;AAErD,OAAO,CAAC,KAAK,GAAG,CAAA,GAAA,gBAAM,CAAA,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,iBAAiB,EAAE,CAAC;;;ACXpB;;AAsQA,iBAAiB;AACjB,6CAAS,OAAO,CAAG;AACnB,6CAAS,OAAO,CAAG;AACnB,0CAAS,KAAK,CAAW;AACzB,kDAAS,YAAY,CAAG;AACxB,0CAAS,KAAK,CAAW;AACzB,kDAAS,YAAY,CAAG;AACxB,gDAAS,MAAM,CAAiB;AAChC,8CAAS,MAAM,CAAe;AAC9B,0CAAS,IAAI,CAAG;AAChB,4CAAS,MAAM,CAAG;AAClB,+CAAS,SAAS,CAAG;AACrB,+CAAS,SAAS,CAAgB;AAClC,0CAAS,IAAI,CAAG;AAChB,4CAAS,MAAM,CAAG;AAClB,6CAAS,OAAO,CAAG;AACnB,oDAAS,cAAc,CAAG;AAC1B,kDAAS,YAAY,CAAG;AACxB,kDAAS,YAAY,CAAG;AACxB,sDAAS,gBAAgB,CAAG;AAC5B,oDAAS,cAAc,CAAG;AAC1B,eAAe;AACf,4CAAS,OAAO,CAAa;;AAvS7B;;;;;;;;;;GAUG,CACH,MAAM,OAAO,GAAG,OAAO,AAAC;AACxB;;GAEG,CACH,MAAM,OAAO,GAAG,OAAO,AAAC;AACxB,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,UAAU,AAAC;AAC5C,MAAM,QAAQ,GAAG,OAAO,IAAI,KAAK,UAAU,AAAC;AAC5C,MAAM,UAAU,GAAG,OAAO,MAAM,KAAK,UAAU,AAAC;AAChD,MAAM,GAAG,GAAG,OAAO,WAAW,KAAK,UAAU,GAAG,IAAI,WAAW,EAAE,GAAG,SAAS,AAAC;AAC9E,MAAM,GAAG,GAAG,OAAO,WAAW,KAAK,UAAU,GAAG,IAAI,WAAW,EAAE,GAAG,SAAS,AAAC;AAC9E,MAAM,KAAK,GAAG,mEAAmE,AAAC;AAClF,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;AACjD,MAAM,MAAM,GAAG,AAAC,CAAA,CAAC,CAAC,GAAK;IACnB,IAAI,GAAG,GAAG,EAAE,AAAC;IACb,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,OAAO,GAAG,CAAC;CACd,CAAA,CAAE,MAAM,CAAC,AAAC;AACX,MAAM,KAAK,4EAA4E,AAAC;AACxF,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,AAAC;AACjD,MAAM,QAAQ,GAAG,OAAO,UAAU,CAAC,IAAI,KAAK,UAAU,GAChD,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAChC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,GAAK,CAAC,GAAK,IAAI,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,AAAC;AACvF,MAAM,UAAU,GAAG,CAAC,GAAG,GAAK,GAAG,CAC1B,OAAO,OAAO,EAAE,CAAC,CAAC,OAAO,WAAW,CAAC,EAAE,GAAK,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,AAAC;AACxE,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAK,CAAC,CAAC,OAAO,sBAAsB,EAAE,CAAC,AAAC;AAC3D;;GAEG,CACH,MAAM,YAAY,GAAG,CAAC,GAAG,GAAK;IAC1B,6BAA6B;IAC7B,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,AAAC;IAC9B,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,AAAC;IAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAG;QAC7B,IAAI,AAAC,CAAA,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAA,GAAI,GAAG,IAChC,AAAC,CAAA,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAA,GAAI,GAAG,IAChC,AAAC,CAAA,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAA,GAAI,GAAG,EAChC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;QACnD,GAAG,GAAG,AAAC,EAAE,IAAI,EAAE,GAAK,EAAE,IAAI,CAAC,GAAI,EAAE,CAAC;QAClC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC,GACvB,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC,GACtB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,GACrB,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;KAC1B;IACD,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;CACnE,AAAC;AACF;;;;GAIG,CACH,MAAM,KAAK,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAK,IAAI,CAAC,GAAG,CAAC,GACrC,UAAU,GAAG,CAAC,GAAG,GAAK,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAC/D,YAAY,AAAC;AACvB,MAAM,eAAe,GAAG,UAAU,GAC5B,CAAC,GAAG,GAAK,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAC5C,CAAC,GAAG,GAAK;IACP,yHAAyH;IACzH,MAAM,OAAO,GAAG,MAAM,AAAC;IACvB,IAAI,IAAI,GAAG,EAAE,AAAC;IACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAEjE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;CAC/B,AAAC;AACN;;;;GAIG,CACH,MAAM,cAAc,GAAG,CAAC,GAAG,EAAE,OAAO,GAAG,KAAK,GAAK,OAAO,GAAG,UAAU,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC,AAAC;AACnH,8EAA8E;AAC9E,mEAAmE;AACnE,qCAAqC;AACrC,MAAM,OAAO,GAAG,CAAC,CAAC,GAAK;IACnB,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QACd,IAAI,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,AAAC;QACzB,OAAO,EAAE,GAAG,IAAI,GAAG,CAAC,GACd,EAAE,GAAG,KAAK,GAAI,OAAO,CAAC,IAAI,GAAI,EAAE,KAAK,CAAC,AAAC,CAAC,GACpC,OAAO,CAAC,IAAI,GAAI,EAAE,GAAG,IAAI,AAAC,CAAC,GAC1B,OAAO,CAAC,IAAI,GAAI,AAAC,EAAE,KAAK,EAAE,GAAI,IAAI,AAAC,CAAC,GACjC,OAAO,CAAC,IAAI,GAAI,AAAC,EAAE,KAAK,CAAC,GAAI,IAAI,AAAC,CAAC,GACnC,OAAO,CAAC,IAAI,GAAI,EAAE,GAAG,IAAI,AAAC,CAAC,AAAC,CAAC;KAC9C,MACI;QACD,IAAI,EAAE,GAAG,OAAO,GACV,AAAC,CAAA,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA,GAAI,KAAK,GACjC,CAAA,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA,AAAC,AAAC;QACjC,OAAQ,OAAO,CAAC,IAAI,GAAI,AAAC,EAAE,KAAK,EAAE,GAAI,IAAI,AAAC,CAAC,GACtC,OAAO,CAAC,IAAI,GAAI,AAAC,EAAE,KAAK,EAAE,GAAI,IAAI,AAAC,CAAC,GACpC,OAAO,CAAC,IAAI,GAAI,AAAC,EAAE,KAAK,CAAC,GAAI,IAAI,AAAC,CAAC,GACnC,OAAO,CAAC,IAAI,GAAI,EAAE,GAAG,IAAI,AAAC,CAAC,CAAE;KACtC;CACJ,AAAC;AACF,MAAM,OAAO,kDAAkD,AAAC;AAChE;;;;GAIG,CACH,MAAM,IAAI,GAAG,CAAC,CAAC,GAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,AAAC;AAChD,EAAE;AACF,MAAM,OAAO,GAAG,UAAU,GACpB,CAAC,CAAC,GAAK,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAChD,GAAG,GACC,CAAC,CAAC,GAAK,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GACrC,CAAC,CAAC,GAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;AAChC;;;;GAIG,CACH,MAAM,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,GAAG,KAAK,GAAK,OAAO,GAC1C,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GACxB,OAAO,CAAC,GAAG,CAAC,AAAC;AACnB;;;GAGG,CACH,MAAM,SAAS,GAAG,CAAC,GAAG,GAAK,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,AAAC;AAC7C,8EAA8E;AAC9E,iEAAiE;AACjE,qCAAqC;AACrC,MAAM,OAAO,gFAAgF,AAAC;AAC9F,MAAM,OAAO,GAAG,CAAC,IAAI,GAAK;IACtB,OAAQ,IAAI,CAAC,MAAM;QACf,KAAK,CAAC;YACF,IAAI,EAAE,GAAG,AAAE,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,EAAE,GACpC,AAAC,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,EAAE,GACjC,AAAC,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,CAAC,GAChC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,AAAC,EAAE,MAAM,GAAG,EAAE,GAAG,OAAO,AAAC;YACzD,OAAQ,OAAO,CAAC,AAAC,CAAA,MAAM,KAAK,EAAE,CAAA,GAAI,MAAM,CAAC,GACnC,OAAO,CAAC,AAAC,CAAA,MAAM,GAAG,KAAK,CAAA,GAAI,MAAM,CAAC,CAAE;QAC9C,KAAK,CAAC;YACF,OAAO,OAAO,CAAC,AAAE,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,EAAE,GAC1C,AAAC,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,CAAC,GAChC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,AAAC,CAAC,CAAC;QACvC;YACI,OAAO,OAAO,CAAC,AAAE,CAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,IAAK,CAAC,GACzC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,AAAC,CAAC,CAAC;KAC1C;CACJ,AAAC;AACF;;;;GAIG,CACH,MAAM,IAAI,GAAG,CAAC,CAAC,GAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,AAAC;AAChD;;GAEG,CACH,MAAM,YAAY,GAAG,CAAC,GAAG,GAAK;IAC1B,6BAA6B;IAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,SAAS,EAAE,CAAC,CAAC;IAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAChB,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAC;IAC7C,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAI,CAAA,GAAG,CAAC,MAAM,GAAG,CAAC,CAAA,AAAC,CAAC,CAAC;IACxC,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,AAAC;IAC1B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAG;QAC7B,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,GAC7B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,GAC7B,AAAC,CAAA,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,IAAK,CAAC,GAClC,CAAA,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,AAAC,CAAC;QACrC,GAAG,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,GACrC,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAChD,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;KACjE;IACD,OAAO,GAAG,CAAC;CACd,AAAC;AACF;;;;GAIG,CACH,MAAM,KAAK,GAAG,QAAQ,GAAG,CAAC,GAAG,GAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAC/C,UAAU,GAAG,CAAC,GAAG,GAAK,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAC/D,YAAY,AAAC;AACvB,EAAE;AACF,MAAM,aAAa,GAAG,UAAU,GAC1B,CAAC,CAAC,GAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GACzC,CAAC,CAAC,GAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,GAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,AAAC;AACtD;;GAEG,CACH,MAAM,YAAY,GAAG,CAAC,CAAC,GAAK,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,AAAC;AACrD,EAAE;AACF,MAAM,OAAO,GAAG,UAAU,GACpB,CAAC,CAAC,GAAK,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAChD,GAAG,GACC,CAAC,CAAC,GAAK,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GACnC,CAAC,CAAC,GAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,AAAC;AAChC,MAAM,MAAM,GAAG,CAAC,CAAC,GAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,UAAU,CAAC,EAAE,GAAK,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,AAAC;AAClF;;;;GAIG,CACH,MAAM,MAAM,GAAG,CAAC,GAAG,GAAK,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,AAAC;AAC7C;;;IAGI,CACJ,MAAM,OAAO,GAAG,CAAC,GAAG,GAAK;IACrB,IAAI,OAAO,GAAG,KAAK,QAAQ,EACvB,OAAO,KAAK,CAAC;IACjB,MAAM,CAAC,GAAG,GAAG,CAAC,OAAO,SAAS,EAAE,CAAC,CAAC,OAAO,YAAY,EAAE,CAAC,AAAC;IACzD,OAAO,CAAC,oBAAoB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC;CACvE,AAAC;AACF,EAAE;AACF,MAAM,OAAO,GAAG,CAAC,CAAC,GAAK;IACnB,OAAO;QACH,KAAK,EAAE,CAAC;QAAE,UAAU,EAAE,KAAK;QAAE,QAAQ,EAAE,IAAI;QAAE,YAAY,EAAE,IAAI;KAClE,CAAC;CACL,AAAC;AACF;;GAEG,CACH,MAAM,YAAY,GAAG,WAAY;IAC7B,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,GAAK,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,AAAC;IAC1F,IAAI,CAAC,YAAY,EAAE,WAAY;QAAE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;IACzD,IAAI,CAAC,UAAU,EAAE,SAAU,OAAO,EAAE;QAAE,OAAO,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC;IACvE,IAAI,CAAC,aAAa,EAAE,WAAY;QAAE,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;IAChE,IAAI,CAAC,aAAa,EAAE,WAAY;QAAE,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;IAChE,IAAI,CAAC,cAAc,EAAE,WAAY;QAAE,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;CACpE,AAAC;AACF;;GAEG,CACH,MAAM,gBAAgB,GAAG,WAAY;IACjC,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,GAAK,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,AAAC;IAC9F,IAAI,CAAC,UAAU,EAAE,SAAU,OAAO,EAAE;QAAE,OAAO,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;KAAE,CAAC,CAAC;IAC/E,IAAI,CAAC,aAAa,EAAE,WAAY;QAAE,OAAO,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;IACxE,IAAI,CAAC,aAAa,EAAE,WAAY;QAAE,OAAO,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAAE,CAAC,CAAC;CAC3E,AAAC;AACF;;GAEG,CACH,MAAM,cAAc,GAAG,IAAM;IACzB,YAAY,EAAE,CAAC;IACf,gBAAgB,EAAE,CAAC;CACtB,AAAC;AACF,MAAM,OAAO,GAAG;IACZ,OAAO,EAAE,OAAO;IAChB,OAAO,EAAE,OAAO;IAChB,IAAI,EAAE,KAAK;IACX,YAAY,EAAE,YAAY;IAC1B,IAAI,EAAE,KAAK;IACX,YAAY,EAAE,YAAY;IAC1B,UAAU,EAAE,MAAM;IAClB,QAAQ,EAAE,MAAM;IAChB,MAAM,EAAE,MAAM;IACd,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,MAAM;IACd,OAAO,EAAE,OAAO;IAChB,cAAc,EAAE,cAAc;IAC9B,YAAY,EAAE,YAAY;IAC1B,YAAY,EAAE,YAAY;IAC1B,gBAAgB,EAAE,gBAAgB;IAClC,cAAc,EAAE,cAAc;CACjC,AAAC;;;AChRF;;;;;GAKG,CACH,6BAA6B,CAE7B,YAAY;AAEZ,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC;AACnC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM,mBAAmB,GACvB,AAAC,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,UAAU,CAAE,mCAAmC;AAArC,GAChE,MAAM,CAAC,KAAK,CAAC,CAAC,4BAA4B,CAAC,CAAC,mCAAmC;GAC/E,IAAI;AAEV,OAAO,CAAC,MAAM,GAAG,MAAM;AACvB,OAAO,CAAC,UAAU,GAAG,UAAU;AAC/B,OAAO,CAAC,iBAAiB,GAAG,EAAE;AAE9B,MAAM,YAAY,GAAG,UAAU;AAC/B,OAAO,CAAC,UAAU,GAAG,YAAY;AAEjC;;;;;;;;;;;;;GAaG,CACH,MAAM,CAAC,mBAAmB,GAAG,iBAAiB,EAAE;AAEhD,IAAI,CAAC,MAAM,CAAC,mBAAmB,IAAI,OAAO,OAAO,KAAK,WAAW,IAC7D,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EACrC,OAAO,CAAC,KAAK,CACX,+IACsE,CACvE;AAGH,SAAS,iBAAiB,GAAI;IAC5B,8CAA8C;IAC9C,IAAI;QACF,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG;YAAE,GAAG,EAAE,WAAY;gBAAE,OAAO,EAAE,CAAA;aAAE;SAAE;QAChD,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC;QAClD,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC;QACjC,OAAO,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,CAAA;KACxB,CAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAA;KACb;CACF;AAED,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE;IAChD,UAAU,EAAE,IAAI;IAChB,GAAG,EAAE,WAAY;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,SAAS,CAAA;QAC5C,OAAO,IAAI,CAAC,MAAM,CAAA;KACnB;CACF,CAAC;AAEF,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE;IAChD,UAAU,EAAE,IAAI;IAChB,GAAG,EAAE,WAAY;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,SAAS,CAAA;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAA;KACvB;CACF,CAAC;AAEF,SAAS,YAAY,CAAE,MAAM,EAAE;IAC7B,IAAI,MAAM,GAAG,YAAY,EACvB,MAAM,IAAI,UAAU,CAAC,aAAa,GAAG,MAAM,GAAG,gCAAgC,CAAC,CAAA;IAEjF,4CAA4C;IAC5C,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;IAClC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC;IAC5C,OAAO,GAAG,CAAA;CACX;AAED;;;;;;;;GAQG,CAEH,SAAS,MAAM,CAAE,GAAG,EAAE,gBAAgB,EAAE,MAAM,EAAE;IAC9C,eAAe;IACf,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EACtC,MAAM,IAAI,SAAS,CACjB,oEAAoE,CACrE,CAAA;QAEH,OAAO,WAAW,CAAC,GAAG,CAAC,CAAA;KACxB;IACD,OAAO,IAAI,CAAC,GAAG,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;CAC3C;AAED,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,kCAAkC;AAAnC;AAEtB,SAAS,IAAI,CAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE;IAC9C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,OAAO,UAAU,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA;IAG5C,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAC3B,OAAO,aAAa,CAAC,KAAK,CAAC,CAAA;IAG7B,IAAI,KAAK,IAAI,IAAI,EACf,MAAM,IAAI,SAAS,CACjB,iHACsC,GAAI,OAAO,KAAK,AAAC,CACxD,CAAA;IAGH,IAAI,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,IAC7B,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,AAAC,EAClD,OAAO,eAAe,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGzD,IAAI,OAAO,iBAAiB,KAAK,WAAW,IACvC,CAAA,UAAU,CAAC,KAAK,EAAE,iBAAiB,CAAC,IACpC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,iBAAiB,CAAC,AAAC,CAAA,AAAC,EACzD,OAAO,eAAe,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGzD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,MAAM,IAAI,SAAS,CACjB,uEAAuE,CACxE,CAAA;IAGH,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;IAChD,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,KAAK,KAAK,EACtC,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGvD,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;IAC3B,IAAI,CAAC,EAAE,OAAO,CAAC,CAAA;IAEf,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,IAC3D,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,EACjD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;IAGnF,MAAM,IAAI,SAAS,CACjB,iHACsC,GAAI,OAAO,KAAK,AAAC,CACxD,CAAA;CACF;AAED;;;;;;;IAOI,CACJ,MAAM,CAAC,IAAI,GAAG,SAAU,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE;IACvD,OAAO,IAAI,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAA;CAC7C;AAED,kFAAkF;AAClF,4CAA4C;AAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC;AAC7D,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC;AAEzC,SAAS,UAAU,CAAE,IAAI,EAAE;IACzB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAC1B,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAA;SACxD,IAAI,IAAI,GAAG,CAAC,EACjB,MAAM,IAAI,UAAU,CAAC,aAAa,GAAG,IAAI,GAAG,gCAAgC,CAAC,CAAA;CAEhF;AAED,SAAS,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;IACpC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI,IAAI,IAAI,CAAC,EACX,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;IAE3B,IAAI,IAAI,KAAK,SAAS,EACpB,wDAAwD;IACxD,uDAAuD;IACvD,oCAAoC;IACpC,OAAO,OAAO,QAAQ,KAAK,QAAQ,GAC/B,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,GACvC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAEnC,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;CAC1B;AAED;;;IAGI,CACJ,MAAM,CAAC,KAAK,GAAG,SAAU,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;IAC7C,OAAO,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACnC;AAED,SAAS,WAAW,CAAE,IAAI,EAAE;IAC1B,UAAU,CAAC,IAAI,CAAC;IAChB,OAAO,YAAY,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;CACtD;AAED;;KAEK,CACL,MAAM,CAAC,WAAW,GAAG,SAAU,IAAI,EAAE;IACnC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAA;CACzB;AACD;;GAEG,CACH,MAAM,CAAC,eAAe,GAAG,SAAU,IAAI,EAAE;IACvC,OAAO,WAAW,CAAC,IAAI,CAAC,CAAA;CACzB;AAED,SAAS,UAAU,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrC,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,EAAE,EACjD,QAAQ,GAAG,MAAM;IAGnB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC9B,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;IAGtD,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC;IAC/C,IAAI,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;IAE9B,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC;IAE1C,IAAI,MAAM,KAAK,MAAM,EACnB,2EAA2E;IAC3E,0EAA0E;IAC1E,oCAAoC;IACpC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC;IAG5B,OAAO,GAAG,CAAA;CACX;AAED,SAAS,aAAa,CAAE,KAAK,EAAE;IAC7B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;IAC/D,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;IAChC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,CAChC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG;IAEzB,OAAO,GAAG,CAAA;CACX;AAED,SAAS,aAAa,CAAE,SAAS,EAAE;IACjC,IAAI,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE;QACrC,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC;QACtC,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;KACtE;IACD,OAAO,aAAa,CAAC,SAAS,CAAC,CAAA;CAChC;AAED,SAAS,eAAe,CAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE;IACnD,IAAI,UAAU,GAAG,CAAC,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,EACjD,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAA;IAG9D,IAAI,KAAK,CAAC,UAAU,GAAG,UAAU,GAAI,CAAA,MAAM,IAAI,CAAC,CAAA,AAAC,EAC/C,MAAM,IAAI,UAAU,CAAC,sCAAsC,CAAC,CAAA;IAG9D,IAAI,GAAG;IACP,IAAI,UAAU,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAClD,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC;SACtB,IAAI,MAAM,KAAK,SAAS,EAC7B,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC;SAEvC,GAAG,GAAG,IAAI,UAAU,CAAC,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC;IAGjD,4CAA4C;IAC5C,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC;IAE5C,OAAO,GAAG,CAAA;CACX;AAED,SAAS,UAAU,CAAE,GAAG,EAAE;IACxB,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,MAAM,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;QAE7B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAClB,OAAO,GAAG,CAAA;QAGZ,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QACxB,OAAO,GAAG,CAAA;KACX;IAED,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE;QAC5B,IAAI,OAAO,GAAG,CAAC,MAAM,KAAK,QAAQ,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAC3D,OAAO,YAAY,CAAC,CAAC,CAAC,CAAA;QAExB,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;KAC1B;IAED,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAClD,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;CAEjC;AAED,SAAS,OAAO,CAAE,MAAM,EAAE;IACxB,wEAAwE;IACxE,sDAAsD;IACtD,IAAI,MAAM,IAAI,YAAY,EACxB,MAAM,IAAI,UAAU,CAAC,yDACU,GAAG,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAA;IAEzE,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,SAAS,UAAU,CAAE,MAAM,EAAE;IAC3B,IAAI,CAAC,MAAM,IAAI,MAAM,EACnB,MAAM,GAAG,CAAC;IAEZ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAA;CAC7B;AAED,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,CAAC,EAAE;IACtC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,IACtC,CAAC,KAAK,MAAM,CAAC,SAAS,CAAC,qDAAqD;IAAtD,CAAA;CACzB;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;IACzE,IAAI,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;IACzE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC5C,MAAM,IAAI,SAAS,CACjB,uEAAuE,CACxE,CAAA;IAGH,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAErB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;IAChB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;IAEhB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAChD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACjB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACR,MAAK;KACN;IAGH,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IACpB,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;IACnB,OAAO,CAAC,CAAA;CACT;AAED,MAAM,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,QAAQ,EAAE;IACjD,OAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE;QACpC,KAAK,KAAK,CAAC;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,IAAI,CAAA;QACb;YACE,OAAO,KAAK,CAAA;KACf;CACF;AAED,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,IAAI,EAAE,MAAM,EAAE;IAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EACtB,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;IAGpE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACnB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAGxB,IAAI,CAAC;IACL,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,MAAM,GAAG,CAAC;QACV,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAC9B,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;KAE3B;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;IACzC,IAAI,GAAG,GAAG,CAAC;IACX,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;QACjB,IAAI,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC;YAC7B,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACjD,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;aACtB,MACC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,MAAM,EACN,GAAG,EACH,GAAG,CACJ;eAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC9B,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;aAElE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;QAEvB,GAAG,IAAI,GAAG,CAAC,MAAM;KAClB;IACD,OAAO,MAAM,CAAA;CACd;AAED,SAAS,UAAU,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EACzB,OAAO,MAAM,CAAC,MAAM,CAAA;IAEtB,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,EAC/D,OAAO,MAAM,CAAC,UAAU,CAAA;IAE1B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAC5B,MAAM,IAAI,SAAS,CACjB,0FACgB,GAAG,OAAO,MAAM,CACjC,CAAA;IAGH,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM;IACzB,MAAM,SAAS,GAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,AAAC;IACjE,IAAI,CAAC,SAAS,IAAI,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAErC,oCAAoC;IACpC,IAAI,WAAW,GAAG,KAAK;IACvB,OACE,OAAQ,QAAQ;QACd,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,GAAG,CAAA;QACZ,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;QACnC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,GAAG,GAAG,CAAC,CAAA;QAChB,KAAK,KAAK;YACR,OAAO,GAAG,KAAK,CAAC,CAAA;QAClB,KAAK,QAAQ;YACX,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,CAAA;QACrC;YACE,IAAI,WAAW,EACb,OAAO,SAAS,GAAG,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,cAAc;YAAf,CAAA;YAEpD,QAAQ,GAAG,AAAC,CAAA,EAAE,GAAG,QAAQ,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AACD,MAAM,CAAC,UAAU,GAAG,UAAU;AAE9B,SAAS,YAAY,CAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE;IAC3C,IAAI,WAAW,GAAG,KAAK;IAEvB,4EAA4E;IAC5E,6BAA6B;IAE7B,2EAA2E;IAC3E,mEAAmE;IACnE,8DAA8D;IAC9D,kEAAkE;IAClE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,GAAG,CAAC,EAClC,KAAK,GAAG,CAAC;IAEX,6EAA6E;IAC7E,uBAAuB;IACvB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EACrB,OAAO,EAAE,CAAA;IAGX,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EACxC,GAAG,GAAG,IAAI,CAAC,MAAM;IAGnB,IAAI,GAAG,IAAI,CAAC,EACV,OAAO,EAAE,CAAA;IAGX,0EAA0E;IAC1E,GAAG,MAAM,CAAC;IACV,KAAK,MAAM,CAAC;IAEZ,IAAI,GAAG,IAAI,KAAK,EACd,OAAO,EAAE,CAAA;IAGX,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,MAAM;IAEhC,MAAO,IAAI,CACT,OAAQ,QAAQ;QACd,KAAK,KAAK;YACR,OAAO,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEnC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEpC,KAAK,OAAO;YACV,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAErC,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEtC,KAAK,QAAQ;YACX,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEtC,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAEvC;YACE,IAAI,WAAW,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;YACrE,QAAQ,GAAG,AAAC,CAAA,QAAQ,GAAG,EAAE,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AAED,+EAA+E;AAC/E,4EAA4E;AAC5E,6EAA6E;AAC7E,2EAA2E;AAC3E,yEAAyE;AACzE,mDAAmD;AACnD,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI;AAEjC,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACtB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CACT;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAC7B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAEtB,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACzB;IACD,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EACf,MAAM,IAAI,UAAU,CAAC,2CAA2C,CAAC,CAAA;IAEnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QAC/B,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACzB;IACD,OAAO,IAAI,CAAA;CACZ;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAI;IAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM;IAC1B,IAAI,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAC3B,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;IAC7D,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;CAC3C;AAED,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ;AAE3D,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;IAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAA;IACzE,IAAI,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI,CAAA;IAC3B,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAA;CACrC;AAED,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;IAC7C,IAAI,GAAG,GAAG,EAAE;IACZ,MAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB;IACrC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,YAAY,KAAK,CAAC,CAAC,IAAI,EAAE;IACnE,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE,GAAG,IAAI,OAAO;IACrC,OAAO,UAAU,GAAG,GAAG,GAAG,GAAG,CAAA;CAC9B;AACD,IAAI,mBAAmB,EACrB,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO;AAGlE,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;IACnF,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,EAChC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC;IAEhE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC1B,MAAM,IAAI,SAAS,CACjB,gFACgB,GAAI,OAAO,MAAM,AAAC,CACnC,CAAA;IAGH,IAAI,KAAK,KAAK,SAAS,EACrB,KAAK,GAAG,CAAC;IAEX,IAAI,GAAG,KAAK,SAAS,EACnB,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;IAElC,IAAI,SAAS,KAAK,SAAS,EACzB,SAAS,GAAG,CAAC;IAEf,IAAI,OAAO,KAAK,SAAS,EACvB,OAAO,GAAG,IAAI,CAAC,MAAM;IAGvB,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,GAAG,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,EAC5E,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAG5C,IAAI,SAAS,IAAI,OAAO,IAAI,KAAK,IAAI,GAAG,EACtC,OAAO,CAAC,CAAA;IAEV,IAAI,SAAS,IAAI,OAAO,EACtB,OAAO,EAAE,CAAA;IAEX,IAAI,KAAK,IAAI,GAAG,EACd,OAAO,CAAC,CAAA;IAGV,KAAK,MAAM,CAAC;IACZ,GAAG,MAAM,CAAC;IACV,SAAS,MAAM,CAAC;IAChB,OAAO,MAAM,CAAC;IAEd,IAAI,IAAI,KAAK,MAAM,EAAE,OAAO,CAAC,CAAA;IAE7B,IAAI,CAAC,GAAG,OAAO,GAAG,SAAS;IAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,KAAK;IACnB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC;IAC/C,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;IAE3C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC1B,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE;QACjC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QACf,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;QACjB,MAAK;KACN;IAGH,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IACpB,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;IACnB,OAAO,CAAC,CAAA;CACT;AAED,+EAA+E;AAC/E,oEAAoE;AACpE,EAAE;AACF,aAAa;AACb,gCAAgC;AAChC,sCAAsC;AACtC,qEAAqE;AACrE,iEAAiE;AACjE,kDAAkD;AAClD,SAAS,oBAAoB,CAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;IACrE,8BAA8B;IAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAA;IAElC,uBAAuB;IACvB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,QAAQ,GAAG,UAAU;QACrB,UAAU,GAAG,CAAC;KACf,MAAM,IAAI,UAAU,GAAG,UAAU,EAChC,UAAU,GAAG,UAAU;SAClB,IAAI,UAAU,GAAG,WAAW,EACjC,UAAU,GAAG,WAAW;IAE1B,UAAU,GAAG,CAAC,UAAU,CAAC,oBAAoB;IAArB;IACxB,IAAI,WAAW,CAAC,UAAU,CAAC,EACzB,4EAA4E;IAC5E,UAAU,GAAG,GAAG,GAAG,CAAC,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,AAAC;IAG5C,0EAA0E;IAC1E,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,UAAU;IAC3D,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;QAC/B,IAAI,GAAG,EAAE,OAAO,EAAE,CAAA;aACb,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;KACpC,MAAM,IAAI,UAAU,GAAG,CAAC,EAAE;QACzB,IAAI,GAAG,EAAE,UAAU,GAAG,CAAC;aAClB,OAAO,EAAE,CAAA;KACf;IAED,gBAAgB;IAChB,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;IAGlC,iEAAiE;IACjE,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACxB,6DAA6D;QAC7D,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAClB,OAAO,EAAE,CAAA;QAEX,OAAO,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;KAC5D,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAClC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,kCAAkC;QAAnC;QAChB,IAAI,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,EAAE;YACtD,IAAI,GAAG,EACL,OAAO,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;iBAEjE,OAAO,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;SAExE;QACD,OAAO,YAAY,CAAC,MAAM,EAAE;YAAC,GAAG;SAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;KAC9D;IAED,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAA;CAC5D;AAED,SAAS,YAAY,CAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;IAC1D,IAAI,SAAS,GAAG,CAAC;IACjB,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM;IAC1B,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM;IAE1B,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE;QACzC,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,OAAO,IAC3C,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,UAAU,EAAE;YACrD,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAClC,OAAO,EAAE,CAAA;YAEX,SAAS,GAAG,CAAC;YACb,SAAS,IAAI,CAAC;YACd,SAAS,IAAI,CAAC;YACd,UAAU,IAAI,CAAC;SAChB;KACF;IAED,SAAS,IAAI,CAAE,GAAG,EAAE,CAAC,EAAE;QACrB,IAAI,SAAS,KAAK,CAAC,EACjB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAA;aAEb,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC,CAAA;KAEzC;IAED,IAAI,CAAC;IACL,IAAI,GAAG,EAAE;QACP,IAAI,UAAU,GAAG,EAAE;QACnB,IAAK,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,CACrC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,UAAU,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,EAAE;YACtE,IAAI,UAAU,KAAK,EAAE,EAAE,UAAU,GAAG,CAAC;YACrC,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,KAAK,SAAS,EAAE,OAAO,UAAU,GAAG,SAAS,CAAA;SACpE,MAAM;YACL,IAAI,UAAU,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,UAAU;YAC1C,UAAU,GAAG,EAAE;SAChB;KAEJ,MAAM;QACL,IAAI,UAAU,GAAG,SAAS,GAAG,SAAS,EAAE,UAAU,GAAG,SAAS,GAAG,SAAS;QAC1E,IAAK,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;YAChC,IAAI,KAAK,GAAG,IAAI;YAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,CAChC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;gBACrC,KAAK,GAAG,KAAK;gBACb,MAAK;aACN;YAEH,IAAI,KAAK,EAAE,OAAO,CAAC,CAAA;SACpB;KACF;IAED,OAAO,EAAE,CAAA;CACV;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IACxE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAA;CACtD;AAED,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IACtE,OAAO,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;CACnE;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC9E,OAAO,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;CACpE;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC9C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IAC5B,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,GAAG,MAAM;IACrC,IAAI,CAAC,MAAM,EACT,MAAM,GAAG,SAAS;SACb;QACL,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QACvB,IAAI,MAAM,GAAG,SAAS,EACpB,MAAM,GAAG,SAAS;KAErB;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;IAE5B,IAAI,MAAM,GAAG,MAAM,GAAG,CAAC,EACrB,MAAM,GAAG,MAAM,GAAG,CAAC;IAErB,IAAI,CAAC;IACL,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACpD,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAA;QACjC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM;KACzB;IACD,OAAO,CAAC,CAAA;CACT;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC/C,OAAO,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CACjF;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAChD,OAAO,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CAC7D;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IACjD,OAAO,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CAC9D;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC/C,OAAO,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;CACpF;AAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;IACzE,uBAAuB;IACvB,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,QAAQ,GAAG,MAAM;QACjB,MAAM,GAAG,IAAI,CAAC,MAAM;QACpB,MAAM,GAAG,CAAC;IACZ,iCAAiC;KAChC,MAAM,IAAI,MAAM,KAAK,SAAS,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC7D,QAAQ,GAAG,MAAM;QACjB,MAAM,GAAG,IAAI,CAAC,MAAM;QACpB,MAAM,GAAG,CAAC;IACZ,qDAAqD;KACpD,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC3B,MAAM,GAAG,MAAM,KAAK,CAAC;QACrB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,MAAM,GAAG,MAAM,KAAK,CAAC;YACrB,IAAI,QAAQ,KAAK,SAAS,EAAE,QAAQ,GAAG,MAAM;SAC9C,MAAM;YACL,QAAQ,GAAG,MAAM;YACjB,MAAM,GAAG,SAAS;SACnB;KACF,MACC,MAAM,IAAI,KAAK,CACb,yEAAyE,CAC1E,CAAA;IAGH,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM;IACtC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,GAAG,SAAS,EAAE,MAAM,GAAG,SAAS;IAElE,IAAI,AAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAK,CAAA,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,CAAA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAC3E,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC,CAAA;IAGhE,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,MAAM;IAEhC,IAAI,WAAW,GAAG,KAAK;IACvB,OACE,OAAQ,QAAQ;QACd,KAAK,KAAK;YACR,OAAO,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAE/C,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACV,OAAO,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEhD,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEjD,KAAK,QAAQ;YACX,2DAA2D;YAC3D,OAAO,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAElD,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO,CAAC;QACb,KAAK,SAAS,CAAC;QACf,KAAK,UAAU;YACb,OAAO,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;QAEhD;YACE,IAAI,WAAW,EAAE,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;YACrE,QAAQ,GAAG,AAAC,CAAA,EAAE,GAAG,QAAQ,CAAA,CAAE,WAAW,EAAE;YACxC,WAAW,GAAG,IAAI;KACrB;CAEJ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;IAC3C,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;KACvD,CAAA;CACF;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACrC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,MAAM,EACnC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;SAEhC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAA;CAErD;AAED,SAAS,SAAS,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACnC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAC/B,MAAM,GAAG,GAAG,EAAE;IAEd,IAAI,CAAC,GAAG,KAAK;IACb,MAAO,CAAC,GAAG,GAAG,CAAE;QACd,MAAM,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;QACxB,IAAI,SAAS,GAAG,IAAI;QACpB,IAAI,gBAAgB,GAAG,AAAC,SAAS,GAAG,IAAI,GACpC,CAAC,GACD,AAAC,SAAS,GAAG,IAAI,GACb,CAAC,GACD,AAAC,SAAS,GAAG,IAAI,GACb,CAAC,GACD,CAAC;QAEb,IAAI,CAAC,GAAG,gBAAgB,IAAI,GAAG,EAAE;YAC/B,IAAI,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa;YAEpD,OAAQ,gBAAgB;gBACtB,KAAK,CAAC;oBACJ,IAAI,SAAS,GAAG,IAAI,EAClB,SAAS,GAAG,SAAS;oBAEvB,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAChC,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,UAAU,GAAG,IAAI,AAAC;wBAC/D,IAAI,aAAa,GAAG,IAAI,EACtB,SAAS,GAAG,aAAa;qBAE5B;oBACD,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAC/D,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,GAAG,CAAA,IAAK,GAAG,GAAG,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,SAAS,GAAG,IAAI,AAAC;wBAC1F,IAAI,aAAa,GAAG,KAAK,IAAK,CAAA,aAAa,GAAG,MAAM,IAAI,aAAa,GAAG,MAAM,CAAA,AAAC,EAC7E,SAAS,GAAG,aAAa;qBAE5B;oBACD,MAAK;gBACP,KAAK,CAAC;oBACJ,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtB,UAAU,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,KAAM,IAAI,IAAI,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,KAAM,IAAI,EAAE;wBAC/F,aAAa,GAAG,AAAC,CAAA,SAAS,GAAG,GAAG,CAAA,IAAK,IAAI,GAAG,AAAC,CAAA,UAAU,GAAG,IAAI,CAAA,IAAK,GAAG,GAAG,AAAC,CAAA,SAAS,GAAG,IAAI,CAAA,IAAK,GAAG,GAAI,UAAU,GAAG,IAAI,AAAC;wBACxH,IAAI,aAAa,GAAG,MAAM,IAAI,aAAa,GAAG,QAAQ,EACpD,SAAS,GAAG,aAAa;qBAE5B;aACJ;SACF;QAED,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,oDAAoD;YACpD,oDAAoD;YACpD,SAAS,GAAG,MAAM;YAClB,gBAAgB,GAAG,CAAC;SACrB,MAAM,IAAI,SAAS,GAAG,MAAM,EAAE;YAC7B,yCAAyC;YACzC,SAAS,IAAI,OAAO;YACpB,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC;YAC3C,SAAS,GAAG,MAAM,GAAG,SAAS,GAAG,KAAK;SACvC;QAED,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACnB,CAAC,IAAI,gBAAgB;KACtB;IAED,OAAO,qBAAqB,CAAC,GAAG,CAAC,CAAA;CAClC;AAED,wEAAwE;AACxE,iDAAiD;AACjD,qCAAqC;AACrC,MAAM,oBAAoB,GAAG,MAAM;AAEnC,SAAS,qBAAqB,CAAE,UAAU,EAAE;IAC1C,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM;IAC7B,IAAI,GAAG,IAAI,oBAAoB,EAC7B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,sBAAsB;KAAvB;IAGtD,wDAAwD;IACxD,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,CAAC,GAAG,GAAG,CACZ,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAC9B,MAAM,EACN,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,oBAAoB,CAAC,CAC/C;IAEH,OAAO,GAAG,CAAA;CACX;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACpC,IAAI,GAAG,GAAG,EAAE;IACZ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAE/B,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAE3C,OAAO,GAAG,CAAA;CACX;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACrC,IAAI,GAAG,GAAG,EAAE;IACZ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;IAE/B,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO,GAAG,CAAA;CACX;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IAClC,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM;IAEtB,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;IAClC,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG;IAE3C,IAAI,GAAG,GAAG,EAAE;IACZ,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC9B,GAAG,IAAI,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO,GAAG,CAAA;CACX;AAED,SAAS,YAAY,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;IACtC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC;IACnC,IAAI,GAAG,GAAG,EAAE;IACZ,4EAA4E;IAC5E,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAC1C,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,GAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,AAAC,CAAC;IAE7D,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,KAAK,EAAE,GAAG,EAAE;IACnD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM;IACvB,KAAK,GAAG,CAAC,CAAC,KAAK;IACf,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG;IAErC,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,KAAK,IAAI,GAAG;QACZ,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;KACzB,MAAM,IAAI,KAAK,GAAG,GAAG,EACpB,KAAK,GAAG,GAAG;IAGb,IAAI,GAAG,GAAG,CAAC,EAAE;QACX,GAAG,IAAI,GAAG;QACV,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;KACrB,MAAM,IAAI,GAAG,GAAG,GAAG,EAClB,GAAG,GAAG,GAAG;IAGX,IAAI,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,KAAK;IAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;IACxC,4CAA4C;IAC5C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;IAE/C,OAAO,MAAM,CAAA;CACd;AAED;;GAEG,CACH,SAAS,WAAW,CAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;IACzC,IAAI,AAAC,MAAM,GAAG,CAAC,KAAM,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAChF,IAAI,MAAM,GAAG,GAAG,GAAG,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,uCAAuC,CAAC,CAAA;CACzF;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC/E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,EAAE,CAAC,GAAG,UAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;IAG/B,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC/E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EACX,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAG9C,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,UAAU,CAAC;IACrC,IAAI,GAAG,GAAG,CAAC;IACX,MAAO,UAAU,GAAG,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACrC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,UAAU,CAAC,GAAG,GAAG;IAG1C,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAC1B,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,QAAQ,EAAE;IACjE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAA;CACpB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,CAAA;CAC9C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;CAC9C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,CAAA,AAAC,IAAI,CAAC,MAAM,CAAC,GAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,AAAC,CAAA;CACnC;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAC7B,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,GAAG,SAAS,GAC7B,CAAA,AAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,AAAC,CAAA;CACpB;AAED,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,MAAM,EAAE;IACtF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,EAAE,GAAG,KAAK,GACd,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;IAE1B,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,GAAG,CAAC,IAAI,EAAE;IAEhB,OAAO,MAAM,CAAC,EAAE,CAAC,GAAI,CAAA,MAAM,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,AAAC,CAAA;CAC/C,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,MAAM,EAAE;IACtF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC;IAEhB,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GACjC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI;IAEN,OAAO,AAAC,CAAA,MAAM,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAAI,MAAM,CAAC,EAAE,CAAC,CAAA;CAC/C,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC7E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,MAAO,EAAE,CAAC,GAAG,UAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG;IAE/B,GAAG,IAAI,IAAI;IAEX,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;IAElD,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC7E,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;IAE3D,IAAI,CAAC,GAAG,UAAU;IAClB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;IAC5B,MAAO,CAAC,GAAG,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAC5B,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG;IAEjC,GAAG,IAAI,IAAI;IAEX,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;IAElD,OAAO,GAAG,CAAA;CACX;AAED,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,MAAM,EAAE,QAAQ,EAAE;IAC/D,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,IAAI,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA,AAAC,EAAE,OAAQ,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,OAAQ,AAAC,CAAA,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA,GAAI,EAAE,CAAC;CACxC;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC;IAClD,OAAO,AAAC,GAAG,GAAG,MAAM,GAAI,GAAG,GAAG,UAAU,GAAG,GAAG,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,AAAC;IAClD,OAAO,AAAC,GAAG,GAAG,MAAM,GAAI,GAAG,GAAG,UAAU,GAAG,GAAG,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,GACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAElD,OAAO,AAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,AAAC,CAAA;CACrB;AAED,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,kBAAkB,CAAC,SAAS,cAAc,CAAE,MAAM,EAAE;IACpF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAC1B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAM,GACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAO,GACzB,CAAA,IAAI,IAAI,EAAE,CAAE,WAAW;IAAb,CAAA,AAAC;IAEd,OAAO,AAAC,CAAA,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAC/B,MAAM,CAAC,KAAK,GACZ,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAA;CAC5B,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,kBAAkB,CAAC,SAAS,cAAc,CAAE,MAAM,EAAE;IACpF,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,EAC3C,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAGtC,MAAM,GAAG,GAAG,AAAC,CAAA,KAAK,IAAI,EAAE,CAAA,GACtB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,EAAE,MAAM,CAAC;IAEhB,OAAO,AAAC,CAAA,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,GAC/B,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAC/B,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,KAAO,GACxB,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,GAAM,GACvB,IAAI,CAAC,CAAA;CACR,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,MAAM,EAAE,QAAQ,EAAE;IACrE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAChD;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAC/C;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;IAClD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;CAChD;AAED,SAAS,QAAQ,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAA;IAC7F,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE,MAAM,IAAI,UAAU,CAAC,mCAAmC,CAAC,CAAA;IACzF,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;CAC1E;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAC5B,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IACxF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;QAChD,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;KACvD;IAED,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;IAC3B,MAAO,EAAE,CAAC,GAAG,UAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CACvC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,KAAK,GAAG,GAAG,GAAI,IAAI;IAGzC,OAAO,MAAM,GAAG,UAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,WAAW,GAC5B,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IACxF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,UAAU,GAAG,UAAU,KAAK,CAAC;IAC7B,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;QAChD,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;KACvD;IAED,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;IAC/B,MAAO,EAAE,CAAC,IAAI,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,KAAK,GAAG,GAAG,GAAI,IAAI;IAGzC,OAAO,MAAM,GAAG,UAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAC3B,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC1E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACxD,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9D,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAC9B,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IAC9D,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;IACrD,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAE3C,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClB,OAAO,MAAM,CAAA;CACd;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;IACrD,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAE3C,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3C,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IACpB,EAAE,GAAG,EAAE,IAAI,CAAC;IACZ,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE;IAChB,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,SAAS,gBAAgB,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACnG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACpF,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,SAAS,gBAAgB,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACnG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACpF,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IACtF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,UAAU,GAAI,CAAC,CAAC;QAE/C,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;KAC7D;IAED,IAAI,CAAC,GAAG,CAAC;IACT,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,GAAG,IAAI;IAC3B,MAAO,EAAE,CAAC,GAAG,UAAU,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAAE;QACzC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EACtD,GAAG,GAAG,CAAC;QAET,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,GAAG,IAAK,CAAC,CAAA,GAAI,GAAG,GAAG,IAAI;KACrD;IAED,OAAO,MAAM,GAAG,UAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;IACtF,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,UAAU,GAAI,CAAC,CAAC;QAE/C,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;KAC7D;IAED,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC;IACtB,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,GAAG,GAAG,CAAC;IACX,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;IAC/B,MAAO,EAAE,CAAC,IAAI,CAAC,IAAK,CAAA,GAAG,IAAI,KAAK,CAAA,AAAC,CAAE;QACjC,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EACtD,GAAG,GAAG,CAAC;QAET,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,GAAG,IAAK,CAAC,CAAA,GAAI,GAAG,GAAG,IAAI;KACrD;IAED,OAAO,MAAM,GAAG,UAAU,CAAA;CAC3B;AAED,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxE,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAK,CAAC;IAC5D,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC;IACvC,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAO,CAAC;IAChE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAO,CAAC;IAChE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC;IACxE,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC;IACxE,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,GAAG,KAAK,GAAG,CAAC;IAC7C,IAAI,CAAC,MAAM,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,EAAE,AAAC;IACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,KAAK,CAAC,AAAC;IAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAI,KAAK,GAAG,IAAI,AAAC;IACjC,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACjG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACxG,CAAC;AAEF,MAAM,CAAC,SAAS,CAAC,eAAe,GAAG,kBAAkB,CAAC,SAAS,eAAe,CAAE,KAAK,EAAE,MAAM,GAAG,CAAC,EAAE;IACjG,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAA;CACxG,CAAC;AAEF,SAAS,YAAY,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACxD,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IACzE,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;CAC3D;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE;IAC/D,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EACX,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,sBAAsB,EAAE,wCAAuB,CAAC;IAEtF,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACvD;AAED,MAAM,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9E,OAAO,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;CACxD;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE;IAChE,KAAK,GAAG,CAAC,KAAK;IACd,MAAM,GAAG,MAAM,KAAK,CAAC;IACrB,IAAI,CAAC,QAAQ,EACX,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,uBAAuB,EAAE,sTAAwB,CAAC;IAExF,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,OAAO,MAAM,GAAG,CAAC,CAAA;CAClB;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;CACxD;AAED,MAAM,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IAChF,OAAO,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;CACzD;AAED,4EAA4E;AAC5E,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;IACtE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAA;IAChF,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC;IACrB,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM;IACxC,IAAI,WAAW,IAAI,MAAM,CAAC,MAAM,EAAE,WAAW,GAAG,MAAM,CAAC,MAAM;IAC7D,IAAI,CAAC,WAAW,EAAE,WAAW,GAAG,CAAC;IACjC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,KAAK,EAAE,GAAG,GAAG,KAAK;IAEvC,2BAA2B;IAC3B,IAAI,GAAG,KAAK,KAAK,EAAE,OAAO,CAAC,CAAA;IAC3B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;IAEtD,yBAAyB;IACzB,IAAI,WAAW,GAAG,CAAC,EACjB,MAAM,IAAI,UAAU,CAAC,2BAA2B,CAAC,CAAA;IAEnD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IACjF,IAAI,GAAG,GAAG,CAAC,EAAE,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAA;IAE5D,cAAc;IACd,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM;IACxC,IAAI,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,GAAG,KAAK,EAC3C,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,KAAK;IAG3C,MAAM,GAAG,GAAG,GAAG,GAAG,KAAK;IAEvB,IAAI,IAAI,KAAK,MAAM,IAAI,OAAO,UAAU,CAAC,SAAS,CAAC,UAAU,KAAK,UAAU,EAC1E,iDAAiD;IACjD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC;SAExC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,MAAM,EACN,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,EACzB,WAAW,CACZ;IAGH,OAAO,GAAG,CAAA;CACX;AAED,SAAS;AACT,0CAA0C;AAC1C,0CAA0C;AAC1C,sDAAsD;AACtD,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;IAChE,uBAAuB;IACvB,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,QAAQ,GAAG,KAAK;YAChB,KAAK,GAAG,CAAC;YACT,GAAG,GAAG,IAAI,CAAC,MAAM;SAClB,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAClC,QAAQ,GAAG,GAAG;YACd,GAAG,GAAG,IAAI,CAAC,MAAM;SAClB;QACD,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,QAAQ,EACxD,MAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAA;QAElD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAC9D,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAA;QAEtD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9B,IAAI,AAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,GAAG,GAAG,IAClC,QAAQ,KAAK,QAAQ,EACvB,uEAAuE;YACvE,GAAG,GAAG,IAAI;SAEb;KACF,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAChC,GAAG,GAAG,GAAG,GAAG,GAAG;SACV,IAAI,OAAO,GAAG,KAAK,SAAS,EACjC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IAGnB,qEAAqE;IACrE,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,EACvD,MAAM,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAG5C,IAAI,GAAG,IAAI,KAAK,EACd,OAAO,IAAI,CAAA;IAGb,KAAK,GAAG,KAAK,KAAK,CAAC;IACnB,GAAG,GAAG,GAAG,KAAK,SAAS,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,KAAK,CAAC;IAEjD,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;IAEjB,IAAI,CAAC;IACL,IAAI,OAAO,GAAG,KAAK,QAAQ,EACzB,IAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG;SAEV;QACL,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,GAC9B,GAAG,GACH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC;QAC9B,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM;QACxB,IAAI,GAAG,KAAK,CAAC,EACX,MAAM,IAAI,SAAS,CAAC,aAAa,GAAG,GAAG,GACrC,mCAAmC,CAAC,CAAA;QAExC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,EAAE,CAAC,CAC9B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;KAEnC;IAED,OAAO,IAAI,CAAA;CACZ;AAED,gBAAgB;AAChB,gBAAgB;AAEhB,+DAA+D;AAC/D,MAAM,MAAM,GAAG,EAAE;AACjB,SAAS,CAAC,CAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE;IACjC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,SAAS,SAAS,IAAI;QACxC,aAAe;YACb,KAAK,EAAE;YAEP,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;gBACrC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC;gBACxC,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,IAAI;aACnB,CAAC;YAEF,mEAAmE;YACnE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;YACnC,0EAA0E;YAC1E,iBAAiB;YACjB,IAAI,CAAC,KAAK,CAAC,4CAA4C;;YACvD,qCAAqC;YACrC,OAAO,IAAI,CAAC,IAAI;SACjB;QAED,IAAI,IAAI,GAAI;YACV,OAAO,GAAG,CAAA;SACX;QAED,IAAI,IAAI,CAAE,KAAK,EAAE;YACf,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;gBAClC,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK;gBACL,QAAQ,EAAE,IAAI;aACf,CAAC;SACH;QAED,QAAQ,GAAI;YACV,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;SAChD;KACF;CACF;AAED,CAAC,CAAC,0BAA0B,EAC1B,SAAU,IAAI,EAAE;IACd,IAAI,IAAI,EACN,OAAO,CAAC,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAA;IAG9C,OAAO,gDAAgD,CAAA;CACxD,EAAE,UAAU,CAAC;AAChB,CAAC,CAAC,sBAAsB,EACtB,SAAU,IAAI,EAAE,MAAM,EAAE;IACtB,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,iDAAiD,EAAE,OAAO,MAAM,CAAC,CAAC,CAAA;CACvF,EAAE,SAAS,CAAC;AACf,CAAC,CAAC,kBAAkB,EAClB,SAAU,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IAC3B,IAAI,GAAG,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,kBAAkB,CAAC;IAClD,IAAI,QAAQ,GAAG,KAAK;IACpB,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,EACtD,QAAQ,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QACpC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;QACxB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,CAAE,CAAA,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA,AAAC,EACvE,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC;QAE5C,QAAQ,IAAI,GAAG;KAChB;IACD,GAAG,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnD,OAAO,GAAG,CAAA;CACX,EAAE,UAAU,CAAC;AAEhB,SAAS,qBAAqB,CAAE,GAAG,EAAE;IACnC,IAAI,GAAG,GAAG,EAAE;IACZ,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM;IAClB,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;IACpC,MAAO,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAC3B,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAEvC,OAAO,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;CAClC;AAED,kBAAkB;AAClB,kBAAkB;AAElB,SAAS,WAAW,CAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE;IAC7C,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC;IAChC,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,SAAS,EACrE,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAI,CAAA,UAAU,GAAG,CAAC,CAAA,AAAC,CAAC;CAErD;AAED,SAAS,UAAU,CAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE;IAC7D,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;QAC9B,MAAM,CAAC,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,EAAE;QAC5C,IAAI,KAAK;QACT,IAAI,UAAU,GAAG,CAAC;YAChB,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,EAChC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,UAAU,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAE7D,KAAK,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,AAAC,CAAA,UAAU,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,GAC5D,CAAC,EAAE,AAAC,CAAA,UAAU,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;eAG3C,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3C,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;KACzD;IACD,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,CAAC;CACrC;AAED,SAAS,cAAc,CAAE,KAAK,EAAE,IAAI,EAAE;IACpC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC3B,MAAM,IAAI,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;CAE/D;AAED,SAAS,WAAW,CAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;QAC/B,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC;QAC3B,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,CAAA;KACzE;IAED,IAAI,MAAM,GAAG,CAAC,EACZ,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,CAAA;IAG7C,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,IAAI,IAAI,QAAQ,EAChB,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,EACrC,KAAK,CAAC,CAAA;CACzC;AAED,mBAAmB;AACnB,mBAAmB;AAEnB,MAAM,iBAAiB,sBAAsB;AAE7C,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,uDAAuD;IACvD,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,wFAAwF;IACxF,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;IAC/C,8CAA8C;IAC9C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE,CAAA;IAC7B,uFAAuF;IACvF,MAAO,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CACzB,GAAG,GAAG,GAAG,GAAG,GAAG;IAEjB,OAAO,GAAG,CAAA;CACX;AAED,SAAS,WAAW,CAAE,MAAM,EAAE,KAAK,EAAE;IACnC,KAAK,GAAG,KAAK,IAAI,QAAQ;IACzB,IAAI,SAAS;IACb,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;IAC5B,IAAI,aAAa,GAAG,IAAI;IACxB,MAAM,KAAK,GAAG,EAAE;IAEhB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC/B,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QAEhC,yBAAyB;QACzB,IAAI,SAAS,GAAG,MAAM,IAAI,SAAS,GAAG,MAAM,EAAE;YAC5C,uBAAuB;YACvB,IAAI,CAAC,aAAa,EAAE;gBAClB,cAAc;gBACd,IAAI,SAAS,GAAG,MAAM,EAAE;oBACtB,mBAAmB;oBACnB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;oBACnD,SAAQ;iBACT,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE;oBAC3B,gBAAgB;oBAChB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;oBACnD,SAAQ;iBACT;gBAED,aAAa;gBACb,aAAa,GAAG,SAAS;gBAEzB,SAAQ;aACT;YAED,mBAAmB;YACnB,IAAI,SAAS,GAAG,MAAM,EAAE;gBACtB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;gBACnD,aAAa,GAAG,SAAS;gBACzB,SAAQ;aACT;YAED,uBAAuB;YACvB,SAAS,GAAG,AAAC,CAAA,aAAa,GAAG,MAAM,IAAI,EAAE,GAAG,SAAS,GAAG,MAAM,CAAA,GAAI,OAAO;SAC1E,MAAM,IAAI,aAAa,EACtB,2CAA2C;QAC3C;YAAA,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;SAAA,AACpD;QAED,aAAa,GAAG,IAAI;QAEpB,cAAc;QACd,IAAI,SAAS,GAAG,IAAI,EAAE;YACpB,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;SACtB,MAAM,IAAI,SAAS,GAAG,KAAK,EAAE;YAC5B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,GAAG,GAAG,IAAI,EACvB,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MAAM,IAAI,SAAS,GAAG,OAAO,EAAE;YAC9B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,GAAG,GAAG,IAAI,EACvB,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MAAM,IAAI,SAAS,GAAG,QAAQ,EAAE;YAC/B,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;YAC3B,KAAK,CAAC,IAAI,CACR,SAAS,IAAI,IAAI,GAAG,IAAI,EACxB,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9B,SAAS,GAAG,IAAI,GAAG,IAAI,CACxB;SACF,MACC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;KAExC;IAED,OAAO,KAAK,CAAA;CACb;AAED,SAAS,YAAY,CAAE,GAAG,EAAE;IAC1B,MAAM,SAAS,GAAG,EAAE;IACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CACjC,sDAAsD;IACtD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAE1C,OAAO,SAAS,CAAA;CACjB;AAED,SAAS,cAAc,CAAE,GAAG,EAAE,KAAK,EAAE;IACnC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE;IACb,MAAM,SAAS,GAAG,EAAE;IACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;QACnC,IAAI,AAAC,CAAA,KAAK,IAAI,CAAC,CAAA,GAAI,CAAC,EAAE,MAAK;QAE3B,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACrB,EAAE,GAAG,CAAC,IAAI,CAAC;QACX,EAAE,GAAG,CAAC,GAAG,GAAG;QACZ,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;QAClB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;KACnB;IAED,OAAO,SAAS,CAAA;CACjB;AAED,SAAS,aAAa,CAAE,GAAG,EAAE;IAC3B,OAAO,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA;CAC5C;AAED,SAAS,UAAU,CAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE;IAC7C,IAAI,CAAC;IACL,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAE;QAC3B,IAAI,AAAC,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,MAAM,IAAM,CAAC,IAAI,GAAG,CAAC,MAAM,AAAC,EAAE,MAAK;QAC1D,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;KACzB;IACD,OAAO,CAAC,CAAA;CACT;AAED,mFAAmF;AACnF,qEAAqE;AACrE,mDAAmD;AACnD,SAAS,UAAU,CAAE,GAAG,EAAE,IAAI,EAAE;IAC9B,OAAO,GAAG,YAAY,IAAI,IACvB,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,IACrE,GAAG,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,AAAC,CAAA;CACxC;AACD,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,mBAAmB;IACnB,OAAO,GAAG,KAAK,GAAG,CAAC,sCAAsC;IAAvC,CAAA;CACnB;AAED,4CAA4C;AAC5C,mDAAmD;AACnD,MAAM,mBAAmB,GAAG,AAAC,WAAY;IACvC,MAAM,QAAQ,GAAG,kBAAkB;IACnC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAE;QAC3B,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE;QAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CACzB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;KAE7C;IACD,OAAO,KAAK,CAAA;CACb,EAAG;AAEJ,yDAAyD;AACzD,SAAS,kBAAkB,CAAE,EAAE,EAAE;IAC/B,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,sBAAsB,GAAG,EAAE,CAAA;CACnE;AAED,SAAS,sBAAsB,GAAI;IACjC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;CACxC;;;ACzjED,YAAY;AAEZ,OAAO,CAAC,UAAU,GAAG,UAAU;AAC/B,OAAO,CAAC,WAAW,GAAG,WAAW;AACjC,OAAO,CAAC,aAAa,GAAG,aAAa;AAErC,IAAI,MAAM,GAAG,EAAE;AACf,IAAI,SAAS,GAAG,EAAE;AAClB,IAAI,GAAG,GAAG,OAAO,UAAU,KAAK,WAAW,GAAG,UAAU,GAAG,KAAK;AAEhE,IAAI,IAAI,GAAG,kEAAkE;AAC7E,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAE;IAC/C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;CAClC;AAED,6DAA6D;AAC7D,6DAA6D;AAC7D,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACjC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AAEjC,SAAS,OAAO,CAAE,GAAG,EAAE;IACrB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM;IAEpB,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EACb,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAA;IAGnE,yDAAyD;IACzD,yDAAyD;IACzD,IAAI,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;IAC/B,IAAI,QAAQ,KAAK,EAAE,EAAE,QAAQ,GAAG,GAAG;IAEnC,IAAI,eAAe,GAAG,QAAQ,KAAK,GAAG,GAClC,CAAC,GACD,CAAC,GAAI,QAAQ,GAAG,CAAC,AAAC;IAEtB,OAAO;QAAC,QAAQ;QAAE,eAAe;KAAC,CAAA;CACnC;AAED,4DAA4D;AAC5D,SAAS,UAAU,CAAE,GAAG,EAAE;IACxB,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;IACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7B,OAAO,AAAE,CAAA,QAAQ,GAAG,eAAe,CAAA,GAAI,CAAC,GAAG,CAAC,GAAI,eAAe,CAAA;CAChE;AAED,SAAS,WAAW,CAAE,GAAG,EAAE,QAAQ,EAAE,eAAe,EAAE;IACpD,OAAO,AAAE,CAAA,QAAQ,GAAG,eAAe,CAAA,GAAI,CAAC,GAAG,CAAC,GAAI,eAAe,CAAA;CAChE;AAED,SAAS,WAAW,CAAE,GAAG,EAAE;IACzB,IAAI,GAAG;IACP,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;IACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACtB,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC;IAE7B,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;IAE9D,IAAI,OAAO,GAAG,CAAC;IAEf,sEAAsE;IACtE,IAAI,GAAG,GAAG,eAAe,GAAG,CAAC,GACzB,QAAQ,GAAG,CAAC,GACZ,QAAQ;IAEZ,IAAI,CAAC;IACL,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QAC3B,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAClC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GACtC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GACtC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,EAAE,GAAI,IAAI;QACnC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,IAAI,eAAe,KAAK,CAAC,EAAE;QACzB,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GACjC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,AAAC;QACzC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,IAAI,eAAe,KAAK,CAAC,EAAE;QACzB,GAAG,GACD,AAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAClC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GACrC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,AAAC;QACzC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI;QAClC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI;KAC5B;IAED,OAAO,GAAG,CAAA;CACX;AAED,SAAS,eAAe,CAAE,GAAG,EAAE;IAC7B,OAAO,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAC7B,MAAM,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GACxB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GACvB,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;CACrB;AAED,SAAS,WAAW,CAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IACvC,IAAI,GAAG;IACP,IAAI,MAAM,GAAG,EAAE;IACf,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;QACnC,GAAG,GACD,AAAC,CAAA,AAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,GAAI,QAAQ,CAAA,GAC3B,CAAA,AAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAI,MAAM,CAAA,GAC5B,CAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAA,AAAC;QACvB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KAClC;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACvB;AAED,SAAS,aAAa,CAAE,KAAK,EAAE;IAC7B,IAAI,GAAG;IACP,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM;IACtB,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC,sCAAsC;IAAvC;IACxB,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,cAAc,GAAG,KAAK,CAAC,wBAAwB;IAAzB;IAE1B,+EAA+E;IAC/E,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,cAAc,CACpE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,AAAC,CAAC,GAAG,cAAc,GAAI,IAAI,GAAG,IAAI,GAAI,CAAC,GAAG,cAAc,AAAC,CAAC,CAAC;IAG9F,sEAAsE;IACtE,IAAI,UAAU,KAAK,CAAC,EAAE;QACpB,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;QACpB,KAAK,CAAC,IAAI,CACR,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAChB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,IAAI,CACL;KACF,MAAM,IAAI,UAAU,KAAK,CAAC,EAAE;QAC3B,GAAG,GAAG,AAAC,CAAA,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA,GAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5C,KAAK,CAAC,IAAI,CACR,MAAM,CAAC,GAAG,IAAI,EAAE,CAAC,GACjB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,MAAM,CAAC,AAAC,GAAG,IAAI,CAAC,GAAI,IAAI,CAAC,GACzB,GAAG,CACJ;KACF;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;CACtB;;;ACrJD,yFAAyF,CACzF,OAAO,CAAC,IAAI,GAAG,SAAU,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;IAC3D,IAAI,CAAC,EAAE,CAAC;IACR,IAAI,IAAI,GAAG,AAAC,MAAM,GAAG,CAAC,GAAI,IAAI,GAAG,CAAC;IAClC,IAAI,IAAI,GAAG,AAAC,CAAA,CAAC,IAAI,IAAI,CAAA,GAAI,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC;IACrB,IAAI,KAAK,GAAG,EAAE;IACd,IAAI,CAAC,GAAG,IAAI,GAAI,MAAM,GAAG,CAAC,GAAI,CAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;IACrB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAE1B,CAAC,IAAI,CAAC;IAEN,CAAC,GAAG,CAAC,GAAI,AAAC,CAAA,CAAC,IAAK,CAAC,KAAK,AAAC,CAAA,GAAI,CAAC,AAAC;IAC7B,CAAC,KAAM,CAAC,KAAK,AAAC;IACd,KAAK,IAAI,IAAI;IACb,MAAO,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,GAAG,GAAG,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;IAExE,CAAC,GAAG,CAAC,GAAI,AAAC,CAAA,CAAC,IAAK,CAAC,KAAK,AAAC,CAAA,GAAI,CAAC,AAAC;IAC7B,CAAC,KAAM,CAAC,KAAK,AAAC;IACd,KAAK,IAAI,IAAI;IACb,MAAO,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,GAAG,GAAG,GAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC;IAExE,IAAI,CAAC,KAAK,CAAC,EACT,CAAC,GAAG,CAAC,GAAG,KAAK;SACR,IAAI,CAAC,KAAK,IAAI,EACnB,OAAO,CAAC,GAAG,GAAG,GAAI,AAAC,CAAA,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA,GAAI,QAAQ,AAAC,CAAA;SACrC;QACL,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QACzB,CAAC,GAAG,CAAC,GAAG,KAAK;KACd;IACD,OAAO,AAAC,CAAA,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;CAChD;AAED,OAAO,CAAC,KAAK,GAAG,SAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;IACnE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;IACX,IAAI,IAAI,GAAG,AAAC,MAAM,GAAG,CAAC,GAAI,IAAI,GAAG,CAAC;IAClC,IAAI,IAAI,GAAG,AAAC,CAAA,CAAC,IAAI,IAAI,CAAA,GAAI,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC;IACrB,IAAI,EAAE,GAAI,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;IAChE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAI,MAAM,GAAG,CAAC,AAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;IACrB,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,IAAK,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,AAAC,GAAG,CAAC,GAAG,CAAC;IAE3D,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,QAAQ,EAAE;QACtC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;QACxB,CAAC,GAAG,IAAI;KACT,MAAM;QACL,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QAC1C,IAAI,KAAK,GAAI,CAAA,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,GAAI,CAAC,EAAE;YACrC,CAAC,EAAE;YACH,CAAC,IAAI,CAAC;SACP;QACD,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,EAChB,KAAK,IAAI,EAAE,GAAG,CAAC;aAEf,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QAEtC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;YAClB,CAAC,EAAE;YACH,CAAC,IAAI,CAAC;SACP;QAED,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE;YACrB,CAAC,GAAG,CAAC;YACL,CAAC,GAAG,IAAI;SACT,MAAM,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE;YACzB,CAAC,GAAG,AAAC,CAAA,AAAC,KAAK,GAAG,CAAC,GAAI,CAAC,CAAA,GAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;YACzC,CAAC,GAAG,CAAC,GAAG,KAAK;SACd,MAAM;YACL,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;YACtD,CAAC,GAAG,CAAC;SACN;KACF;IAED,MAAO,IAAI,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE5E,CAAC,GAAG,AAAC,CAAC,IAAI,IAAI,GAAI,CAAC;IACnB,IAAI,IAAI,IAAI;IACZ,MAAO,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC;IAE3E,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;CAClC;;;ACpFD,OAAO,CAAC,cAAc,GAAG,SAAU,CAAC,EAAE;IACpC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG;QAAC,OAAO,EAAE,CAAC;KAAC,CAAC;CAC7C,CAAC;AAEF,OAAO,CAAC,iBAAiB,GAAG,SAAU,CAAC,EAAE;IACvC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,YAAY,EAAE;QAAC,KAAK,EAAE,IAAI;KAAC,CAAC,CAAC;CACvD,CAAC;AAEF,OAAO,CAAC,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI,EAAE;IAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAU,GAAG,EAAE;QACzC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EACvE,OAAO;QAGT,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;YAC/B,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,WAAY;gBACf,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;aACpB;SACF,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;CACb,CAAC;AAEF,OAAO,CAAC,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE;IAC9C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;QACpC,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC;CACJ,CAAC;;;AC9BF;;AAMA,6CAAgB,OAAO,CAatB;AAnBD,2BAA4B;AAC5B,+BAAgC;AAChC,qCAAsC;AACtC,mCAA2C;AAC3C,2CAA4C;AAErC,SAAS,OAAO,CAAC,KAAa,EAAU;IAC3C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;IAChC,MAAM,WAAW,GAAG,IAAI,CAAA,GAAA,wBAAW,CAAA,EAAE,AAAC;IAEtC,KAAK,MAAM,IAAI,IAAI,KAAK,CACpB,WAAW,CAAC,SAAS,CACjB,CAAA,GAAA,QAAG,CAAA,CAAC,IAAI,CAAC,CACJ,KAAK,CAAC,CAAA,GAAA,YAAK,CAAA,CAAC,CACZ,KAAK,CAAC,CAAC,GAAG,GAAK,CAAA,GAAA,kBAAQ,CAAA,CAAC,CAAA,GAAA,uBAAc,CAAA,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC,CAClE,CAAC;IAGN,OAAO,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC7C;;;ACnBD;;AAiBA,yCAAgB,GAAG,CAalB;AA9BD,uCAAwC;AAQxC,MAAM,QAAQ,GAAG;IACb,YAAY,qCAAqC,SAAS,CAAC;IAC3D,YAAY,wBAAwB,UAAU,CAAC;IAC/C,YAAY,mBAAmB,QAAQ,CAAC;IACxC,YAAY,mBAAmB,QAAQ,CAAC;IACxC,YAAY,oBAAoB,YAAY,CAAC;IAC7C,YAAY,gEAAgE,YAAY,CAAC;CAC5F,AAAC;AAEK,SAAS,GAAG,CAAC,IAAY,EAAyB;IACrD,MAAM,MAAM,GAAW,EAAE,AAAC;IAC1B,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,MAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE;QACpB,MAAM,MAAM,GAAG,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,AAAC;QAC3C,IAAI,MAAM,KAAK,IAAI,EACf,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;aAChD;YACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SACpB;KACJ;IACD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;CAC5B;AAED,SAAS,WAAW,CAAC,QAAmB,EAAE,IAAY,EAA0B;IAC5E,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE;QAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,AAAC;QAC7B,IAAI,MAAM,KAAK,IAAI,EACf,OAAO,MAAM,CAAC;KAErB;IACD,OAAO,IAAI,CAAC;CACf;AAED,SAAS,YAAY,CAAC,KAAa,EAAE,IAAe,EAAW;IAC3D,OAAO,CAAC,KAAa,GAAK;QACtB,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,AAAC;QACnC,IAAI,OAAO,KAAK,IAAI,EAChB,OAAO;YAAC;gBAAE,IAAI;gBAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;aAAE;YAAE,OAAO,CAAC,CAAC,CAAC;SAAC,CAAC;QAErD,OAAO,IAAI,CAAC;KACf,CAAC;CACL;;;AE8BgBA;;AAAAA,4CAAAA,CAAAA,CAAAA;AAAAA,SAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA;IAAAA,CAAAA,CAAAA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA;CAAAA;AAAAA,SAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA;IAAAA,OAAAA,CAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,EAAAA;QAAAA,OAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA;KAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA;CAAAA;AAAAA,IAAAA,CAAAA,EAhFFC,CAAAA,GAAAA,aAUbC,CAAAA,WAAAA;IAAAA,SAAAA,CAAAA,GAAAA,EAAAA;IAAAA,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,SAAAA,AAAAA;IAAAA,OAAAA,CAAAA,CAAAA,MAAAA,GAAA,SAAOC,CAAAA,EAA4BC,CAAAA,EAAAA;QACjC,IAAMC,CAAAA,GAAIC,IAAAA,CAAKC,MAAAA,CACb,SAAAC,CAAAA,EAAAA;YAASR,OAAAA,CAAAA,CAAOG,EAAAA,CAAGA,CAAAA,GAAKA,CAAAA,CAAGK,CAAAA,CAAAA,GAASA,CAAAA,CAAAA,CAAAA;SAAAA,EACpC,SAAAC,CAAAA,EAAAA;YAAUL,OAAAA,CAAAA,GAAMJ,CAAAA,CAAOG,EAAAA,CAAGC,CAAAA,CAAIK,CAAAA,CAAAA,CAAAA,GAAUT,CAAAA,CAAOI,GAAAA,CAAIK,CAAAA,CAAAA,CAAAA;SAAAA,CAAAA,AAErD;QAAA,IAAIJ,CAAAA,CAAEK,KAAAA,EACJ,MAAML,CAAAA,CAAEI,KAAAA,CAEV;QAAA,OAAOJ,CAAAA,CAAEG,KAAAA,CAAAA;KAAAA,EAAAA,CAAAA,CAQXG,GAAAA,GAAA,SAAIR,CAAAA,EAA2BC,CAAAA,EAAAA;QAC7B,OAAYG,IAAAA,CAAAA,MAAAA,CACV,SAAAC,CAAAA,EAAAA;YAAK,OAAIR,CAAAA,CAAOG,EAAAA,CAAGA,CAAAA,CAAGK,CAAAA,CAAAA,CAAAA,CAAAA;SAAAA,EACtB,SAAAC,CAAAA,EAAAA;YAAK,OAAIT,CAAAA,CAAOI,GAAAA,CAAIA,CAAAA,GAAMA,CAAAA,CAAIK,CAAAA,CAAAA,GAASA,CAAAA,CAAAA,CAAAA;SAAAA,CAAAA,CAAAA;KAAAA,EAAAA,CAAAA,CAa3CG,KAAAA,GAAA,SACET,CAAAA,EACAC,CAAAA,EAAAA;QAEA,OAAYG,IAAAA,CAAAA,MAAAA,CAAOJ,CAAAA,EAAIC,CAAAA,IAAQ,SAAAK,CAAAA,EAAAA;YAAST,OAAAA,CAAAA,CAAOI,GAAAA,CAAIK,CAAAA,CAAAA,CAAAA;SAAAA,CAAAA,CAAAA;KAAAA,EAAAA,CAAAA,CAAAA;CApCrDP,EAAAA,EAwCIW,CAAAA,GAAAA,aAAAA,CAAAA,SAAAA,CAAAA,EAAAA;IAGJ,SAAqBL,CAAAA,CAAAA,CAAAA,EAAAA;QAAQ,IAAAM,CAAAA,AAAA;QAAA,OAAA,AAC3BA,CAAAA,CAAAA,GAD2BC,CAAAA,CAAAC,IAAAA,CAAAV,IAAAA,CAAAA,IAAAA,IAAAA,CAAAA,CAARE,KAAAA,GAAAA,KAAQ,CAAA,EAAAM,CAAAA,CAFpBG,IAAAA,GAAAA,CAAO,CAAA,EAEaH,CAAAA,CADpBJ,KAAAA,GAAAA,CAAQ,CAAA,EACII,CAAAA,CAAKN,KAAAA,GAALA,CAAAA,EAEpBM,CAAAA,CAAAA;KALmCb;IAAAA,OAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAO1BM,CAAAA,CAAAA,SAAAA,CAAAA,MAAAA,GAAA,SACRJ,CAAAA,EACAe,CAAAA,EAAAA;QAEA,OAAOf,CAAAA,CAAGG,IAAAA,CAAKE,KAAAA,CAAAA,CAAAA;KAAAA,EAXmBP,CAAAA,CAAAA;CAAAA,CAAAA,CAAAA,CAAAA,EAehCkB,CAAAA,GAAAA,aAGJ,CAAA,SAAAC,CAAAA,EAAAA;IAAA,SAAAD,CAAAA,CAAqBV,CAAAA,EAAAA;QACnB,IAAAY,CAAAA,AAD2B;QAAA,OAAA,AAC3BA,CAAAA,CAAAA,GAAAD,CAAAA,CAAAJ,IAAAA,CAAAV,IAAAA,CAAAA,IAAAA,IAAAA,CAAAA,CADmBG,KAAAA,GAAAA,KAFZQ,CAAAA,EAAAA,CAAAA,CAAAA,IAAAA,GAAAA,CAAO,CAAA,EACPP,CAAAA,CAAAA,KAAAA,GAAAA,CAAQ,CAAA,EACIW,CAAAA,CAAKZ,KAAAA,GAALA,CAAAA,EAAQY,CAAAA,CAAAA;KAHQpB;IAAAA,OAGrCqB,CAAAA,CAAAH,CAAAA,EAAAC,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,SAAAA,CAIUb,MAAAA,GAAA,SACRgB,CAAAA,EACAnB,CAAAA,EAAAA;QAEA,OAAOA,CAAAA,CAAIE,IAAAA,CAAKG,KAAAA,CAAAA,CAAAA;KAAAA,EAXmBR,CAAAA,CAAAA;CAGrC,CAHqCA,CAAAA,CAAAA,AAAAA;AAAAA,CAevC,SAAiBD,CAAAA,EAAAA;IAICA,CAAAA,CAAAG,EAAAA,GAAhB,SAAuCK,CAAAA,EAAAA;QACrC,OAAO,IAAIK,CAAAA,CAAIL,CAAAA,CAAAA,CAAAA;KAAAA,EAGDR,CAAAA,CAAAI,GAAAA,GAAhB,SAAgDK,CAAAA,EAAAA;QAC9C,OAAO,IAAIU,CAAAA,CAAKV,CAAAA,IAAS,IAAIe,KAAAA,CAAAA,CAAAA;KAAAA,EA6YfxB,CAAAA,CAAAyB,GAAAA,GAAhB,SAAoBC,CAAAA,EAAAA;QAClB,IAAIC,KAAAA,CAAMC,OAAAA,CAAQF,CAAAA,CAAAA,EAAM;YAEtB,IADA,IAAMG,CAAAA,GAAM,EAAA,EACHC,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIJ,CAAAA,CAAIK,MAAAA,EAAQD,CAAAA,EAAAA,CAAK;gBACnC,IAAME,CAAAA,GAAON,CAAAA,CAAII,CAAAA,CAAAA,AACjB;gBAAA,IAAIE,CAAAA,CAAKtB,KAAAA,EACP,OAAOsB,CAAAA,CAETH;gBAAAA,CAAAA,CAAII,IAAAA,CAAKD,CAAAA,CAAKxB,KAAAA,CAAAA;aAEhB;YAAA,OAAOR,CAAAA,CAAOG,EAAAA,CAAG0B,CAAAA,CAAAA,CAAAA;SAKnB;QAAA,IAFA,IAAMA,CAAAA,GAA+B,EAAA,EAC/BK,CAAAA,GAAOC,MAAAA,CAAOD,IAAAA,CAAKR,CAAAA,CAAAA,EAChBI,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAII,CAAAA,CAAKH,MAAAA,EAAQD,CAAAA,EAAAA,CAAK;YACpC,IAAME,CAAAA,GAAQN,CAAAA,CAA0BQ,CAAAA,CAAKJ,CAAAA,CAAAA,CAAAA,AAC7C;YAAA,IAAIE,CAAAA,CAAKtB,KAAAA,EACP,OAAOsB,CAAAA,CAETH;YAAAA,CAAAA,CAAIK,CAAAA,CAAKJ,CAAAA,CAAAA,CAAAA,GAAME,CAAAA,CAAKxB,KAAAA;SAEtB;QAAA,OAAOR,CAAAA,CAAOG,EAAAA,CAAG0B,CAAAA,CAAAA,CAAAA;KAAAA;CA5arB,CAAiB7B,CAAAA,IAAAA,CAAAA,CAAAA,GA8ahB,EA9agBA,CAAAA,AAAAA,CAAAA,CAAAA;;;AChFjB;;AA6BA,2CAAgB,KAAK,CAyBpB;AAtDD,uCAAwC;AACxC,2CAA4C;AA4BrC,SAAS,KAAK,CAAC,MAAc,EAAsB;IACtD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EACnB,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC;QAAE,IAAI,EAAE,OAAO;KAAE,CAAC,CAAC;IAGxC,IAAI,KAAK,GAAgB;QACrB,MAAM;QACN,KAAK,EAAE,CAAC;QACR,SAAS,EAAE,EAAE;QACb,QAAQ,EAAE,EAAE;QACZ,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,OAAO;KACrB,AAAC;IACF,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,AAAC;IACtC,MAAO,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,CAAE;QAChD,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACrC;IAED,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EACpB,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAG9C,OAAO,mBAAmB,CAAC,KAAK,CAAC,CAAC;CACrC;AAED,SAAS,UAAU,CAAC,KAAkB,EAAE,KAAY,EAAe;IAC/D,OAAQ,KAAK,CAAC,IAAI;QACd,KAAK,SAAS;YACV,OAAO,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,UAAU;YACX,OAAO,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7C,KAAK,QAAQ;YACT,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC;QACjC,KAAK,QAAQ;YACT,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;QAClC,KAAK,YAAY;YACb,OAAO,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,KAAK,YAAY;YACb,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;QAClC;YACI,CAAA,GAAA,wBAAW,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAC/B;CACJ;AAED,SAAS,YAAY,CAAC,KAAkB,EAAE,OAAe,EAAe;IACpE,IAAI,IAAI,GAAG,SAAS,AAAC;IACrB,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,AAAC;IAChD,IAAI,SAAS,EAAE,IAAI,KAAK,YAAY,EAAE;QAClC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;QACvB,KAAK,CAAC,KAAK,EAAE,CAAC;KACjB;IACD,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3B,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;QAAE,IAAI,EAAE,QAAQ;QAAE,KAAK,EAAE,OAAO;QAAE,IAAI;KAAE,CAAC,CAAC;IAC9D,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,aAAa,CAAC,KAAkB,EAAE,cAAsB,EAAe;IAC5E,MAAM,UAAU,GAAG;QACf,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,GAAG;KACX,CAAC,cAAc,CAAC,AAAC;IAClB,MAAM,aAAa,GAAG;QAClB,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,MAAM;QACX,GAAG,EAAE,OAAO;KACf,CAAC,cAAc,CAAC,AAAC;IAClB,IAAI,UAAU,KAAK,SAAS,IAAI,aAAa,KAAK,SAAS,EAAE;QACzD,KAAK,CAAC,KAAK,GAAG,uCAAuC,GAAG,cAAc,CAAC;QACvE,OAAO,KAAK,CAAC;KAChB;IAED,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;IAC1B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,AAAC;IACrC,MACI,QAAQ,EAAE,IAAI,KAAK,UAAU,IAC5B,CAAA,QAAQ,CAAC,UAAU,GAAG,UAAU,IAAK,QAAQ,CAAC,UAAU,KAAK,UAAU,IAAI,aAAa,KAAK,MAAM,AAAC,CAAA,AAAC,CACxG;QACE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;QACjC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;QACjC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,EAAE;YACxC,KAAK,CAAC,KAAK,GAAG,2BAA2B,GAAG,cAAc,CAAC;YAC3D,OAAO,KAAK,CAAC;SAChB;QACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,GAAG;YACH,GAAG;SACN,CAAC,CAAC;QACH,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KACpC;IACD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QACjB,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE,cAAc;QACxB,UAAU,EAAE,UAAU;KACzB,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,cAAc,CAAC,KAAkB,EAAe;IACrD,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;IAC1B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QAAE,IAAI,EAAE,QAAQ;KAAE,CAAC,CAAC;IACzC,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,eAAe,CAAC,KAAkB,EAAe;IACtD,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,AAAC;IACrC,MAAO,QAAQ,EAAE,IAAI,KAAK,UAAU,CAAE;QAClC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;QACjC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;QACjC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,EAAE;YACxC,KAAK,CAAC,KAAK,GAAG,2BAA2B,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAC9D,OAAO,KAAK,CAAC;SAChB;QACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YAChB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,GAAG;YACH,GAAG;SACN,CAAC,CAAC;QACH,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KACpC;IAED,IAAI,QAAQ,EAAE,IAAI,KAAK,QAAQ,EAAE;QAC7B,KAAK,CAAC,KAAK,GAAG,wBAAwB,CAAC;QACvC,OAAO,KAAK,CAAC;KAChB;IAED,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAEtB,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,eAAe,CAAC,KAAkB,EAAe;IACtD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QACjB,IAAI,EAAE,YAAY;KACrB,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,eAAe,CAAC,KAAkB,EAAE,UAAkB,EAAe;IAC1E,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;QAChB,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;KACnB,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;CAChB;AAED,SAAS,IAAI,CAAI,EAAO,EAAiB;IACrC,OAAO,EAAE,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;CAC5B;AAED,SAAS,mBAAmB,CAAC,KAAkB,EAAsB;IACjE,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,AAAC;IACrC,MAAO,QAAQ,KAAK,SAAS,CAAE;QAC3B,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC5B,KAAK,CAAC,KAAK,GAAG,mBAAmB,CAAC;YAClC,MAAM;SACT,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YACrC,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;YACrC,IAAI,OAAO,KAAK,SAAS,EAAE;gBACvB,KAAK,CAAC,KAAK,GAAG,mCAAmC,CAAC;gBAClD,MAAM;aACT;YACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,UAAU;gBAChB,OAAO;aACV,CAAC,CAAC;YACH,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACpC,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,EAAE;YACvC,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;YACxC,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC1B,KAAK,CAAC,KAAK,GAAG,yBAAyB,CAAC;gBACxC,MAAM;aACT;YACD,MAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;YAC1C,IAAI,YAAY,EAAE,IAAI,KAAK,UAAU,EAAE;gBACnC,KAAK,CAAC,KAAK,GAAG,kCAAkC,GAAG,YAAY,EAAE,IAAI,CAAC;gBACtE,MAAM;aACT;YACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,YAAY;gBAClB,YAAY,EAAE,YAAY,CAAC,IAAI;gBAC/B,UAAU;aACb,CAAC,CAAC;YACH,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACpC,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;YACrC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;YACjC,MAAM,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;YACjC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,SAAS,EAAE;gBACxC,KAAK,CAAC,KAAK,GAAG,2BAA2B,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC9D,MAAM;aACT;YACD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,GAAG;gBACH,GAAG;aACN,CAAC,CAAC;YACH,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;SACpC,MACG,CAAA,GAAA,wBAAW,CAAA,CAAC,QAAQ,CAAC,CAAC;KAE7B;IAED,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EACpB,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAG9C,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;IACpC,IAAI,MAAM,KAAK,SAAS,EACpB,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAGrD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;CAC5B;;;AC9PD;;AAAA,iDAAgB,WAAW,CAE1B;AAFM,SAAS,WAAW,CAAC,CAAQ,EAAS;IACzC,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;CAC9C;;;ACFD;;AAOA,8CAAgB,QAAQ,CAmCvB;AA1CD,uCAAwC;AAIxC,2CAA4C;AAC5C,+BAAgC;AAEzB,SAAS,QAAQ,CAAC,OAAgB,EAAE,WAAwB,EAAE,GAAQ,EAAwB;IACjG,OAAQ,GAAG,CAAC,IAAI;QACZ,KAAK,QAAQ;YACT,OAAO,GAAG,CAAC,IAAI,KAAK,SAAS,GACvB,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,CAAA,GAAA,YAAK,CAAA,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GACjD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAK,IAAI,CAAA,GAAA,YAAK,CAAA,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QAChG,KAAK,UAAU;YACX,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAK;gBACzD,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;gBACpD,IAAI,GAAG,CAAC,KAAK,EACT,OAAO,GAAG,CAAC;gBAEf,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,GAAG,CAAC,AAAC;gBACpD,IAAI,GAAG,CAAC,KAAK,EACT,OAAO,GAAG,CAAC;gBAEf,OAAO,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;aAClD,CAAC,CAAC;QACP,KAAK,UAAU;YACX,OAAO,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,GAAK,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACzF,KAAK,YAAY;YACb,OAAO,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAK;gBACjE,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACjD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAC;QACP,KAAK,UAAU;YACX,OAAO,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CACxC,CAAC,UAAU,GAAK,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,EACvE,IAAM,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAC1C,CAAC;QACN,KAAK,OAAO;YACR,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC;YACI,CAAA,GAAA,wBAAW,CAAA,CAAC,GAAG,CAAC,CAAC;KACxB;CACJ;;;AC1CD;;AASA,2CAAa,KAAK,CA8FjB;AAvGD,uCAAwC;AACxC,0CAAqC;;AAQ9B,MAAM,KAAK;IAGd,YAAmB,MAAuB,EAAkB,IAAW,CAAE;aAAb,IAAW,GAAX,IAAW;QACnE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA,GAAA,2BAAS,CAAA,CAAC,MAAM,CAAC,CAAC;KACvC;IAED,AAAO,QAAQ,GAAW;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAI,CAAA,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA,AAAC,CAAC;KAC3E;IAED,AAAO,IAAI,CAAC,KAAY,EAAwB;QAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EACnD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAGzF,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,EACpC,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAG7F,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CACZ,IAAI,KAAK,CACL,IAAI,CAAC,MAAM,CACN,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAC/C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EACpC,IAAI,CAAC,IAAI,CACZ,CACJ,CAAC;KACL;IAED,AAAO,KAAK,CAAC,KAAY,EAAwB;QAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EACnD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAG1F,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,EACpC,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAGnG,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CACZ,IAAI,KAAK,CACL,IAAI,CAAC,MAAM,CACN,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAChD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EACpC,IAAI,CAAC,IAAI,CACZ,CACJ,CAAC;KACL;IAED,AAAO,KAAK,CAAC,KAAY,EAAwB;QAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EACnD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QAEtE,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3E;IAED,AAAO,SAAS,CAAC,KAAY,EAAwB;QACjD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EACnD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;QAEpE,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/E;IAED,AAAO,GAAG,CAAC,KAAY,EAAwB;QAC3C,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EACnD,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAEjE,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACzE;IAED,AAAO,OAAO,GAAyB;QACnC,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EACvB,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAElE,OAAO,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACjE;IAED,OAAc,GAAG,CAAC,MAAe,EAAwB;QACrD,IAAI,MAAM,GAAG,SAAS,AAAC;QACvB,KAAK,MAAM,KAAK,IAAI,MAAM,CACtB,IAAI,MAAM,KAAK,SAAS,EACpB,MAAM,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;aAE1B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,GAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAG1D,OAAO,MAAM,KAAK,SAAS,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,GAAG,MAAM,CAAC;KAC7E;IAED,OAAc,OAAO,CAAC,MAAe,EAAwB;QACzD,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,GAAK,KAAK,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACxF;CACJ;;;ACvGC,CAAA,SAAU,YAAY,EAAE;IACxB,YAAY,CAAC;IAEf,kkEA6CG,CAGD,IAAI,SAAS,EACX,SAAS,+CAA+C,EACxD,QAAQ,GAAG,IAAI,CAAC,IAAI,EACpB,SAAS,GAAG,IAAI,CAAC,KAAK,EAEtB,cAAc,GAAG,oBAAoB,EACrC,aAAa,GAAG,cAAc,GAAG,wDAAwD,EAEzF,IAAI,GAAG,IAAI,EACX,QAAQ,GAAG,EAAE,EACb,gBAAgB,GAAG,gBAAgB,EACnC,wDAAwD;IACxD,QAAQ,GAAG;AAAC,SAAC;AAAE,UAAE;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,WAAG;AAAE,YAAI;AAAE,YAAI;AAAE,YAAI;AAAE,YAAI;KAAC,EAClF,SAAS,GAAG,GAAG,EAEf,WAAW;IACX,0FAA0F;IAC1F,sEAAsE;IACtE,GAAG,GAAG,GAAG,AAAC,EAAmC,iBAAiB;IAGhE,0DAEG,CACH,SAAS,KAAK,CAAC,YAAY,EAAE;QAC3B,IAAI,GAAG,EAAE,WAAW,EAAE,YAAY,EAChC,CAAC,GAAG,SAAS,CAAC,SAAS,GAAG;YAAE,WAAW,EAAE,SAAS;YAAE,QAAQ,EAAE,IAAI;YAAE,OAAO,EAAE,IAAI;SAAE,EACnF,GAAG,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,EAGtB,wFAAwF;QAGxF,gFAAgF;QAChF,kEAAkE;QAElE,0EAA0E;QAC1E,cAAc,GAAG,EAAE,EAEnB,mFAAmF;QACnF,+EAA+E;QAC/E,+BAA+B;QAC/B,6BAA6B;QAC7B,kCAAkC;QAClC,kCAAkC;QAClC,8DAA8D;QAC9D,gEAAgE;QAChE,kFAAkF;QAClF,6EAA6E;QAC7E,6EAA6E;QAC7E,aAAa,GAAG,CAAC,EAEjB,6CAA6C;QAE7C,iFAAiF;QACjF,kBAAkB;QAClB,UAAU,GAAG,EAAE,EAEf,+EAA+E;QAC/E,kBAAkB;QAClB,UAAU,GAAG,EAAE,EAEf,6BAA6B;QAE7B,sEAAsE;QACtE,8BAA8B;QAC9B,OAAO,GAAG,SAAI,EAEd,uEAAuE;QACvE,+CAA+C;QAC/C,4EAA4E;QAC5E,OAAO,GAAG,GAAG,EAEb,kFAAkF;QAClF,MAAM,GAAG,KAAK,EAEd,8DAA8D;QAC9D,uFAAuF;QACvF,qDAAqD;QACrD,EAAE;QACF,uFAAuF;QACvF,+DAA+D;QAC/D,gFAAgF;QAChF,mDAAmD;QACnD,yEAAyE;QACzE,2EAA2E;QAC3E,mEAAmE;QACnE,gDAAgD;QAChD,EAAE;QACF,sFAAsF;QACtF,qDAAqD;QACrD,wFAAwF;QACxF,WAAW,GAAG,CAAC,EAEf,2FAA2F;QAC3F,qEAAqE;QACrE,aAAa,GAAG,CAAC,EAEjB,4EAA4E;QAC5E,MAAM,GAAG;YACP,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,kBAAkB,EAAE,CAAC;YACrB,cAAc,EAAE,GAAG;YACnB,gBAAgB,EAAE,GAAG;YACrB,iBAAiB,EAAE,CAAC;YACpB,sBAAsB,EAAE,MAAM;YAC9B,MAAM,EAAE,EAAE;SACX,EAED,6FAA6F;QAC7F,+CAA+C;QAC/C,qEAAqE;QACrE,QAAQ,GAAG,sCAAsC,EACjD,8BAA8B,GAAG,IAAI,AAAC;QAGxC,4FAA4F;QAG5F,cAAc;QAGd,8QAMG,CACH,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;YACvB,IAAI,QAAQ,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EACjD,CAAC,GAAG,IAAI,AAAC;YAEX,yCAAyC;YACzC,IAAI,CAAE,CAAA,CAAC,YAAY,SAAS,CAAA,AAAC,EAAE,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,IAAI,IAAI,EAAE;gBAEb,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE;oBAChC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAEV,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,EACvB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;yBACZ,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,EACtB,CAAC,CAAC,CAAC,GAAG;wBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;qBAAC,CAAC;yBACX;wBACL,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;qBACnB;oBAED,OAAO;iBACR;gBAED,IAAI,AAAC,CAAA,KAAK,GAAG,OAAO,CAAC,IAAI,QAAQ,CAAA,IAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAEhD,yCAAyC;oBACzC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAI,CAAA,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAA,GAAI,CAAC,CAAC;oBAEnC,wDAAwD;oBACxD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;wBACb,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;wBAExC,IAAI,CAAC,GAAG,OAAO,EACb,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;6BACZ;4BACL,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BACR,CAAC,CAAC,CAAC,GAAG;gCAAC,CAAC;6BAAC,CAAC;yBACX;wBAED,OAAO;qBACR;oBAED,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;iBACjB,MAAM;oBAEL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBAEzE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,GAAI,CAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,GAAI,CAAC,CAAC;iBAC9D;gBAED,iBAAiB;gBACjB,IAAI,AAAC,CAAA,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,GAAI,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAE5D,oBAAoB;gBACpB,IAAI,AAAC,CAAA,CAAC,GAAG,GAAG,CAAC,MAAM,MAAM,CAAA,GAAI,CAAC,EAAE;oBAE9B,sBAAsB;oBACtB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACvB,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC3B,MAAM,IAAI,CAAC,GAAG,CAAC,EAEd,WAAW;gBACX,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;aAGlB,MAAM;gBAEL,qFAAqF;gBACrF,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAExC,qEAAqE;gBACrE,uDAAuD;gBACvD,IAAI,CAAC,IAAI,EAAE,IAAI,8BAA8B,EAAE;oBAC7C,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;oBACrB,OAAO,KAAK,CAAC,CAAC,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC;iBAC1D;gBAED,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEhB,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,QAAQ,EAAE;oBAEhC,yEAAyE;oBACzE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAEtD,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAI,CAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,GAAI,CAAC,CAAC;oBAE/C,gFAAgF;oBAChF,IAAI,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC,OAAO,cAAc,EAAE,CAAC,CAAC,MAAM,GAAG,EAAE,EAC7D,MAAM,KAAK,CACT,aAAa,GAAG,CAAC,CAAC,CAAC;iBAExB,MACC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,GAAI,CAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,GAAI,CAAC,CAAC;gBAGhE,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAEV,2CAA2C;gBAC3C,gEAAgE;gBAChE,IAAK,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CACjC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBAC3C,IAAI,CAAC,IAAI,GAAG,EAEV,oEAAoE;oBACpE;wBAAA,IAAI,CAAC,GAAG,CAAC,EAAE;4BACT,CAAC,GAAG,GAAG,CAAC;4BACR,SAAS;yBACV;qBAAA,MACI,IAAI,CAAC,WAAW,EAErB,+CAA+C;oBAC/C;wBAAA,IAAI,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,IAAK,CAAA,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAA,IACpD,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,IAAK,CAAA,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAA,AAAC,EAAE;4BACzD,WAAW,GAAG,IAAI,CAAC;4BACnB,CAAC,GAAG,EAAE,CAAC;4BACP,CAAC,GAAG,CAAC,CAAC;4BACN,SAAS;yBACV;qBAAA,AACF;oBAED,OAAO,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;iBAC7C;gBAGH,sDAAsD;gBACtD,KAAK,GAAG,KAAK,CAAC;gBACd,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEnC,iBAAiB;gBACjB,IAAI,AAAC,CAAA,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,GAAI,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;qBACvD,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;aACrB;YAED,2BAA2B;YAC3B,IAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;YAEzC,4BAA4B;YAC5B,IAAK,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE;YAEnD,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE;gBAC7B,GAAG,IAAI,CAAC,CAAC;gBAET,gFAAgF;gBAChF,IAAI,KAAK,IAAI,SAAS,CAAC,KAAK,IAC1B,GAAG,GAAG,EAAE,IAAK,CAAA,CAAC,GAAG,gBAAgB,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAA,AAAC,EACtD,MAAM,KAAK,CACT,aAAa,GAAI,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC,CAAC,CAAC;gBAGhC,YAAY;gBACb,IAAI,AAAC,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,GAAI,OAAO,EAE3B,YAAY;gBACZ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAGZ,IAAI,CAAC,GAAG,OAAO,EAEpB,QAAQ;gBACR,CAAC,CAAC,CAAC,GAAG;oBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBAAC,CAAC;qBACX;oBACL,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACR,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBAET,iBAAiB;oBAEjB,6BAA6B;oBAC7B,6EAA6E;oBAC7E,CAAC,GAAG,AAAC,CAAA,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,CAAC;oBACvB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAE,QAAQ;oBAEnC,IAAI,CAAC,GAAG,GAAG,EAAE;wBACX,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBAElC,IAAK,GAAG,IAAI,QAAQ,EAAE,CAAC,GAAG,GAAG,EAC3B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;wBAGzC,CAAC,GAAG,QAAQ,GAAG,AAAC,CAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAE,MAAM,CAAC;qBAC5C,MACC,CAAC,IAAI,GAAG,CAAC;oBAGX,MAAO,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG;oBACtB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;iBAChB;aACF,MAEC,QAAQ;YACR,CAAC,CAAC,CAAC,GAAG;gBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;aAAC,CAAC;SAEnB;QAGD,yBAAyB;QAGzB,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAExB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC;QAC1B,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;QAC5B,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC;QAC9B,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC;QAC9B,SAAS,CAAC,eAAe,GAAG,CAAC,CAAC;QAC9B,SAAS,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC/B,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAGrB,wpDAiCG,CACH,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,GAAG,SAAU,GAAG,EAAE;YAChD,IAAI,CAAC,EAAE,CAAC,AAAC;YAET,IAAI,GAAG,IAAI,IAAI,EAAE;gBAEf,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE;oBAE1B,uDAAuD;oBACvD,+FAA+F;oBAC/F,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,gBAAgB,CAAC,EAAE;wBAC5C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;wBACvB,cAAc,GAAG,CAAC,CAAC;qBACpB;oBAED,oDAAoD;oBACpD,8FAA8F;oBAC9F,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,EAAE;wBAC3C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrB,aAAa,GAAG,CAAC,CAAC;qBACnB;oBAED,mCAAmC;oBACnC,oCAAoC;oBACpC,qDAAqD;oBACrD,+FAA+F;oBAC/F,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,gBAAgB,CAAC,EAAE;wBAC5C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;4BACd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;4BAC1B,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;yBACnB,MAAM;4BACL,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;4BAC1B,UAAU,GAAG,CAAE,CAAA,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;yBAC7C;qBACF;oBAED,qEAAqE;oBACrE,8DAA8D;oBAC9D,qGAAqG;oBACrG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE;wBACnC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;4BACd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;4BAC5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;4BAC1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACf,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;yBAChB,MAAM;4BACL,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;4BAC1B,IAAI,CAAC,EACH,OAAO,GAAG,CAAE,CAAA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;iCAEtC,MAAM,KAAK,CACT,cAAc,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,CAAC,CAAC;yBAEnD;qBACF;oBAED,kCAAkC;oBAClC,oDAAoD;oBACpD,yCAAyC;oBACzC,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE;wBACpC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;4BACX,IAAI,CAAC;gCACH,IAAI,OAAO,MAAM,IAAI,WAAW,IAAI,MAAM,IACxC,CAAA,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,WAAW,CAAA,AAAC,EAC7C,MAAM,GAAG,CAAC,CAAC;qCACN;oCACL,MAAM,GAAG,CAAC,CAAC,CAAC;oCACZ,MAAM,KAAK,CACT,cAAc,GAAG,oBAAoB,CAAC,CAAC;iCAC1C;mCAED,MAAM,GAAG,CAAC,CAAC;+BAGb,MAAM,KAAK,CACT,cAAc,GAAG,CAAC,GAAG,sBAAsB,GAAG,CAAC,CAAC,CAAC;qBAEtD;oBAED,kDAAkD;oBAClD,4FAA4F;oBAC5F,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,aAAa,CAAC,EAAE;wBACzC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACrB,WAAW,GAAG,CAAC,CAAC;qBACjB;oBAED,sDAAsD;oBACtD,8FAA8F;oBAC9F,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,eAAe,CAAC,EAAE;wBAC3C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;wBACvB,aAAa,GAAG,CAAC,CAAC;qBACnB;oBAED,kBAAkB;oBAClB,gDAAgD;oBAChD,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE;wBACpC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBACX,IAAI,OAAO,CAAC,IAAI,QAAQ,EAAE,MAAM,GAAG,CAAC,CAAC;6BAChC,MAAM,KAAK,CACd,cAAc,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,CAAC,CAAC;qBAChD;oBAED,oBAAoB;oBACpB,4CAA4C;oBAC5C,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE;wBACtC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;wBAEX,wCAAwC;wBACxC,wEAAwE;wBACxE,IAAI,OAAO,CAAC,IAAI,QAAQ,IAAI,CAAC,wBAAwB,IAAI,CAAC,CAAC,CAAC,EAAE;4BAC5D,8BAA8B,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC;4BAChE,QAAQ,GAAG,CAAC,CAAC;yBACd,MACC,MAAM,KAAK,CACT,cAAc,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;qBAE5C;iBAEF,MAEC,2CAA2C;gBAC3C,MAAM,KAAK,CACT,cAAc,GAAG,mBAAmB,GAAG,GAAG,CAAC,CAAC;aAEjD;YAED,OAAO;gBACL,cAAc,EAAE,cAAc;gBAC9B,aAAa,EAAE,aAAa;gBAC5B,cAAc,EAAE;oBAAC,UAAU;oBAAE,UAAU;iBAAC;gBACxC,KAAK,EAAE;oBAAC,OAAO;oBAAE,OAAO;iBAAC;gBACzB,MAAM,EAAE,MAAM;gBACd,WAAW,EAAE,WAAW;gBACxB,aAAa,EAAE,aAAa;gBAC5B,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ;aACnB,CAAC;SACH,CAAC;QAGF,sQAQG,CACH,SAAS,CAAC,WAAW,GAAG,SAAU,CAAC,EAAE;YACnC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC;YAElC,IAAI,CAAC,EAAE,CAAC,EACN,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEV,GAAG,EAAE,IAAI,CAAA,EAAE,CAAA,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAE9C;gBAAA,IAAI,AAAC,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,IAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;oBAExE,kEAAkE;oBAClE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;wBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;wBAC3C,MAAM,GAAG,CAAC;qBACX;oBAED,2EAA2E;oBAC3E,CAAC,GAAG,AAAC,CAAA,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,CAAC;oBACvB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC;oBAEzB,sCAAsC;oBACtC,uDAAuD;oBACvD,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;wBAE5B,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;4BAC7B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACT,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC;yBACzD;wBAED,8DAA8D;wBAC9D,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;qBAC1B;iBACF;aAAA,MAGI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAK,CAAA,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA,AAAC,EACxE,OAAO,IAAI,CAAC;YAGd,MAAM,KAAK,CACR,cAAc,GAAG,qBAAqB,GAAG,CAAC,CAAC,CAAC;SAChD,CAAC;QAGF,2IAIG,CACH,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,GAAG,WAAY;YAC9C,OAAO,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SAClC,CAAC;QAGF,2IAIG,CACH,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,GAAG,GAAG,WAAY;YAC9C,OAAO,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SAClC,CAAC;QAGF,scASG,CACH,SAAS,CAAC,MAAM,GAAG,AAAC,WAAY;YAC9B,IAAI,OAAO,GAAG,gBAAgB,AAAC;YAE/B,8DAA8D;YAC9D,mEAAmE;YACnE,uFAAuF;YACvF,8DAA8D;YAC9D,IAAI,cAAc,GAAG,AAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,GAAI,QAAQ,GACtD,WAAY;gBAAE,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;aAAE,GAC1D,WAAY;gBAAE,OAAO,AAAE,CAAA,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,GAAG,CAAC,CAAA,GAAI,QAAQ,GAChE,CAAA,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAA,AAAC,CAAC;aAAE,AAAC;YAErC,OAAO,SAAU,EAAE,EAAE;gBACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACf,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,EAAE,EACN,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,AAAC;gBAE5B,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,cAAc,CAAC;qBAC/B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBAE1B,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;gBAE5B,IAAI,MAAM,EAAE;oBAEV,8CAA8C;oBAC9C,IAAI,MAAM,CAAC,eAAe,EAAE;wBAE1B,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAEpD,MAAO,CAAC,GAAG,CAAC,EAAG;4BAEb,WAAW;4BACX,wDAAwD;4BACxD,8DAA8D;4BAC9D,6CAA6C;4BAC7C,8DAA8D;4BAC9D,mBAAmB;4BACnB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAI,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAA,AAAC,CAAC;4BAEvC,sBAAsB;4BACtB,4BAA4B;4BAC5B,iCAAiC;4BACjC,6DAA6D;4BAC7D,IAAI,CAAC,IAAI,IAAI,EAAE;gCACb,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/C,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCACZ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;6BACjB,MAAM;gCAEL,6BAA6B;gCAC7B,oCAAoC;gCACpC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gCACjB,CAAC,IAAI,CAAC,CAAC;6BACR;yBACF;wBACD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAEZ,yCAAyC;qBACxC,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;wBAE7B,SAAS;wBACT,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAE/B,MAAO,CAAC,GAAG,CAAC,EAAG;4BAEb,iDAAiD;4BACjD,yCAAyC;4BACzC,8DAA8D;4BAC9D,4BAA4B;4BAC5B,CAAC,GAAG,AAAE,CAAA,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,GAAI,eAAe,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,GAC3D,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,GAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,GAC/C,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA,GAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA,GAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;4BAEjD,IAAI,CAAC,IAAI,IAAI,EACX,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iCAC5B;gCAEL,oCAAoC;gCACpC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gCACjB,CAAC,IAAI,CAAC,CAAC;6BACR;yBACF;wBACD,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACX,MAAM;wBACL,MAAM,GAAG,KAAK,CAAC;wBACf,MAAM,KAAK,CACT,cAAc,GAAG,oBAAoB,CAAC,CAAC;qBAC1C;iBACF;gBAED,mBAAmB;gBACnB,IAAI,CAAC,MAAM,EAET,MAAO,CAAC,GAAG,CAAC,EAAG;oBACb,CAAC,GAAG,cAAc,EAAE,CAAC;oBACrB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;iBACjC;gBAGH,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACX,EAAE,IAAI,QAAQ,CAAC;gBAEf,oDAAoD;gBACpD,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC7B;gBAED,2CAA2C;gBAC3C,MAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;gBAE/B,QAAQ;gBACR,IAAI,CAAC,GAAG,CAAC,EACP,CAAC,GAAG;oBAAC,CAAC,GAAG,CAAC;iBAAC,CAAC;qBACP;oBAEL,0EAA0E;oBAC1E,IAAK,CAAC,GAAG,EAAE,EAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,QAAQ;oBAEvD,gFAAgF;oBAChF,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;oBAE3C,mCAAmC;oBACnC,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;iBACrC;gBAED,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACX,OAAO,IAAI,CAAC;aACb,CAAC;SACH,EAAG,CAAC;QAGL,mIAIG,CACH,SAAS,CAAC,GAAG,GAAG,WAAY;YAC1B,IAAI,CAAC,GAAG,CAAC,EACP,IAAI,GAAG,SAAS,EAChB,GAAG,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;YAC/B,MAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,OAAO,GAAG,CAAC;SACZ,CAAC;QAGF,oBAAoB;QAGpB,wDAAwD;QACxD,WAAW,GAAG,AAAC,WAAY;YACzB,IAAI,OAAO,GAAG,YAAY,AAAC;YAE3B,qMAIG,CACH,SAAS,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;gBACjD,IAAI,CAAC,EACH,GAAG,GAAG;AAAC,qBAAC;iBAAC,EACT,IAAI,EACJ,CAAC,GAAG,CAAC,EACL,GAAG,GAAG,GAAG,CAAC,MAAM,AAAC;gBAEnB,MAAO,CAAC,GAAG,GAAG,EAAG;oBACf,IAAK,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM;oBAEnD,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE5C,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAE7B,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE;wBACxB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;wBACvC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;wBACnC,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;qBACnB;iBAEJ;gBAED,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;aACtB;YAED,qEAAqE;YACrE,wEAAwE;YACxE,wEAAwE;YACxE,OAAO,SAAU,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE;gBAC7D,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAChC,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EACpB,EAAE,GAAG,cAAc,EACnB,EAAE,GAAG,aAAa,AAAC;gBAErB,eAAe;gBACf,IAAI,CAAC,IAAI,CAAC,EAAE;oBACV,CAAC,GAAG,aAAa,CAAC;oBAElB,uBAAuB;oBACvB,aAAa,GAAG,CAAC,CAAC;oBAClB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBAC3B,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;oBAC1B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1B,aAAa,GAAG,CAAC,CAAC;oBAElB,+EAA+E;oBAC/E,wCAAwC;oBAExC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EACzD,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;iBAClB;gBAED,iCAAiC;gBAEjC,EAAE,GAAG,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,gBAAgB,GACjD,CAAA,QAAQ,GAAG,QAAQ,EAAE,OAAO,CAAA,GAC5B,CAAA,QAAQ,GAAG,OAAO,EAAE,QAAQ,CAAA,AAAC,CAAC,CAAC;gBAEnC,mFAAmF;gBACnF,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;gBAElB,yBAAyB;gBACzB,MAAO,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE;gBAE7B,QAAQ;gBACR,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEtC,kEAAkE;gBAClE,IAAI,CAAC,GAAG,CAAC,EACP,EAAE,CAAC,CAAC;qBACC;oBACL,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBACT,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAER,2CAA2C;oBAC3C,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBACX,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;oBAC/B,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACT,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACR,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACT;gBAED,8CAA8C;gBAE9C,mCAAmC;gBACnC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAEf,kFAAkF;gBAClF,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAEV,yEAAyE;gBAEzE,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;gBAChB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;gBAEpC,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,AAAC,CAAA,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA,IAAM,CAAA,EAAE,IAAI,CAAC,IAAI,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAC,CAAA,AAAC,GAC7D,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAC5D,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAC,CAAA,AAAC,CAAC;gBAEhC,gFAAgF;gBAChF,mFAAmF;gBACnF,mBAAmB;gBACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAEjB,aAAa;gBACb,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;qBACpF;oBAEL,wDAAwD;oBACxD,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;oBAEd,YAAY;oBACZ,IAAI,CAAC,EAEH,0EAA0E;oBAC1E,IAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,EAAG;wBACpC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAEV,IAAI,CAAC,CAAC,EAAE;4BACN,EAAE,CAAC,CAAC;4BACJ,EAAE,GAAG;AAAC,iCAAC;6BAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;yBACrB;qBACF;oBAGH,4BAA4B;oBAC5B,IAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAE5B,gCAAgC;oBAChC,IAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBAE7D,mEAAmE;oBACnE,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChD;gBAED,gCAAgC;gBAChC,OAAO,GAAG,CAAC;aACZ,CAAC;SACH,EAAG,CAAC;QAGL,yEAAyE;QACzE,GAAG,GAAG,AAAC,WAAY;YAEjB,2BAA2B;YAC3B,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;gBAC5B,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EACnB,KAAK,GAAG,CAAC,EACT,CAAC,GAAG,CAAC,CAAC,MAAM,EACZ,GAAG,GAAG,CAAC,GAAG,SAAS,EACnB,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,AAAC;gBAE1B,IAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAG;oBACxB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBACvB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;oBAC3B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;oBAC1B,IAAI,GAAG,GAAG,GAAG,GAAG,GAAI,AAAC,CAAC,GAAG,SAAS,GAAI,SAAS,GAAI,KAAK,CAAC;oBACzD,KAAK,GAAG,AAAC,CAAA,IAAI,GAAG,IAAI,GAAG,CAAC,CAAA,GAAK,CAAA,CAAC,GAAG,SAAS,GAAG,CAAC,CAAA,GAAI,GAAG,GAAG,GAAG,CAAC;oBAC5D,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;iBACpB;gBAED,IAAI,KAAK,EAAE,CAAC,GAAG;oBAAC,KAAK;iBAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEjC,OAAO,CAAC,CAAC;aACV;YAED,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC7B,IAAI,CAAC,EAAE,GAAG,AAAC;gBAEX,IAAI,EAAE,IAAI,EAAE,EACV,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;qBAClB;oBAEL,IAAK,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAE3B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;wBAChB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;wBAC3B,MAAM;qBACP;iBAEJ;gBAED,OAAO,GAAG,CAAC;aACZ;YAED,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE;gBAChC,IAAI,CAAC,GAAG,CAAC,AAAC;gBAEV,qBAAqB;gBACrB,MAAO,EAAE,EAAE,EAAG;oBACZ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACX,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC1B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;iBAClC;gBAED,wBAAwB;gBACxB,MAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;aAC7C;YAED,2BAA2B;YAC3B,OAAO,SAAU,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;gBACnC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EACtE,EAAE,EAAE,EAAE,EACN,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EACvB,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;gBAEX,6BAA6B;gBAC7B,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAEhC,OAAO,IAAI,SAAS,CAEnB,mDAAmD;gBACnD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAK,CAAA,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,AAAC,GAAG,GAAG,GAEtD,0EAA0E;gBAC1E,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CACzC,CAAC;gBAGH,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;gBACrB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACd,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;gBAEf,IAAI,CAAC,IAAI,EAAE;oBACT,IAAI,GAAG,IAAI,CAAC;oBACZ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;oBACxD,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;iBACtB;gBAED,+DAA+D;gBAC/D,+EAA+E;gBAC/E,IAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAK,CAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,AAAC,EAAE,CAAC,EAAE;gBAEtC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAI,CAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,AAAC,EAAE,CAAC,EAAE,CAAC;gBAE9B,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACX,IAAI,GAAG,IAAI,CAAC;iBACb,MAAM;oBACL,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;oBACf,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;oBACf,CAAC,GAAG,CAAC,CAAC;oBACN,CAAC,IAAI,CAAC,CAAC;oBAEP,mEAAmE;oBAEnE,CAAC,GAAG,SAAS,CAAC,IAAI,GAAI,CAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC,CAAC;oBAElC,wEAAwE;oBACxE,+CAA+C;oBAC/C,IAAI,CAAC,GAAG,CAAC,EAAE;wBACT,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC3B,EAAE,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC3B,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;wBACf,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;qBAChB;oBAED,EAAE,GAAG,EAAE,CAAC;oBACR,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBACtB,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;oBAElB,kDAAkD;oBAClD,MAAO,IAAI,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;oBACjC,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;oBAChB,EAAE,GAAG;AAAC,yBAAC;qBAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACpB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACZ,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;oBAC7B,yEAAyE;oBACzE,mDAAmD;oBAEnD,GAAG;wBACD,CAAC,GAAG,CAAC,CAAC;wBAEN,iCAAiC;wBACjC,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;wBAEjC,0BAA0B;wBAC1B,IAAI,GAAG,GAAG,CAAC,EAAE;4BAEX,4BAA4B;4BAE5B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;4BACd,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAI,CAAA,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,AAAC,CAAC;4BAEnD,mEAAmE;4BACnE,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;4BAE1B,cAAc;4BACd,oDAAoD;4BACpD,kCAAkC;4BAClC,yCAAyC;4BACzC,2DAA2D;4BAC3D,oCAAoC;4BACpC,2DAA2D;4BAC3D,wCAAwC;4BACxC,2CAA2C;4BAC3C,+DAA+D;4BAE/D,IAAI,CAAC,GAAG,CAAC,EAAE;gCAET,uCAAuC;gCACvC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;gCAE5B,mCAAmC;gCACnC,IAAI,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;gCAC7B,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gCACpB,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;gCAElB,iCAAiC;gCACjC,sDAAsD;gCACtD,iEAAiE;gCACjE,kCAAkC;gCAClC,MAAO,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAE;oCAC3C,CAAC,EAAE,CAAC;oCAEJ,iCAAiC;oCACjC,QAAQ,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;oCAClD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;oCACpB,GAAG,GAAG,CAAC,CAAC;iCACT;6BACF,MAAM;gCAEL,0BAA0B;gCAC1B,iEAAiE;gCACjE,kCAAkC;gCAClC,gEAAgE;gCAChE,IAAI,CAAC,IAAI,CAAC,EAER,gDAAgD;gCAChD,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gCAGd,oBAAoB;gCACpB,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;gCAClB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;6BACrB;4BAED,IAAI,KAAK,GAAG,IAAI,EAAE,IAAI,GAAG;AAAC,iCAAC;6BAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;4BAE1C,mCAAmC;4BACnC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;4BAChC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;4BAEjB,8BAA8B;4BAC/B,IAAI,GAAG,IAAI,EAAE,EAEX,qCAAqC;4BACrC,+DAA+D;4BAC/D,yBAAyB;4BACzB,kEAAkE;4BAClE,MAAO,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAE;gCACrC,CAAC,EAAE,CAAC;gCAEJ,mCAAmC;gCACnC,QAAQ,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gCAC/C,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;6BACnB;yBAEJ,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;4BACpB,CAAC,EAAE,CAAC;4BACJ,GAAG,GAAG;AAAC,iCAAC;6BAAC,CAAC;yBACX,CAAC,iCAAiC;wBAEnC,8CAA8C;wBAC9C,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBAEZ,wBAAwB;wBACxB,IAAI,GAAG,CAAC,CAAC,CAAC,EACR,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;6BACrB;4BACL,GAAG,GAAG;gCAAC,EAAE,CAAC,EAAE,CAAC;6BAAC,CAAC;4BACf,IAAI,GAAG,CAAC,CAAC;yBACV;qBACF,OAAQ,AAAC,CAAA,CAAA,EAAE,EAAE,CAAA,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA,IAAK,CAAC,EAAE,EAAE;oBAE/C,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;oBAEtB,gBAAgB;oBAChB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC7B;gBAED,IAAI,IAAI,IAAI,IAAI,EAAE;oBAEhB,6DAA6D;oBAC7D,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;oBAE5C,KAAK,CAAC,CAAC,EAAE,EAAE,GAAI,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAA,GAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;gBAE5D,yBAAyB;iBACxB,MAAM;oBACL,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACR,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;iBACb;gBAED,OAAO,CAAC,CAAC;aACV,CAAC;SACH,EAAG,CAAC;QAGL,iYAQG,CACH,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;YAC5B,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,AAAC;YAExB,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,aAAa,CAAC;iBAC9B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAExB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;YAE9B,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAET,IAAI,CAAC,IAAI,IAAI,EAAE;gBACb,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,GAAG,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAK,CAAA,EAAE,IAAI,UAAU,IAAI,EAAE,IAAI,UAAU,CAAA,AAAC,GAC/D,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC,GACtB,YAAY,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;aAC/B,MAAM;gBACL,CAAC,GAAG,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBAEnC,oDAAoD;gBACpD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAER,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;gBAEjB,+EAA+E;gBAC/E,iFAAiF;gBACjF,6CAA6C;gBAE7C,wBAAwB;gBACxB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAK,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,UAAU,CAAA,AAAC,EAAE;oBAErD,gBAAgB;oBAChB,MAAO,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE;oBACjC,GAAG,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBAE9B,wBAAwB;iBACvB,MAAM;oBACL,CAAC,IAAI,EAAE,CAAC;oBACR,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;oBAEhC,gBAAgB;oBAChB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;wBACf,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,IAAK,GAAG,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG;qBAC9C,MAAM;wBACL,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;wBACb,IAAI,CAAC,GAAG,CAAC,EAAE;4BACT,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC;4BAC7B,MAAO,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG;yBACvB;qBACF;iBACF;aACF;YAED,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACxC;QAGD,0CAA0C;QAC1C,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE;YAC9B,IAAI,CAAC,EACH,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC;YAE7B,MAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBAC3B,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE3B,oCAAoC;gBACpC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBACR,CAAC,GAAG,CAAC,CAAC;oBACN,MAAM;iBACP,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAC1B,CAAC,GAAG,CAAC,CAAC;aAET;YAED,OAAO,CAAC,CAAC;SACV;QAGD,oJAGG,CACH,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YAC1B,IAAI,CAAC,GAAG,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,MAAM,AAAC;YAEd,yBAAyB;YAC1B,MAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE;YAEvB,0EAA0E;YAC1E,IAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;YAEpC,YAAY;YACZ,IAAI,AAAC,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAA,GAAI,OAAO,EAEtC,YAAY;YACZ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBAGZ,IAAI,CAAC,GAAG,OAAO,EAEpB,QAAQ;YACR,CAAC,CAAC,CAAC,GAAG;gBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;aAAC,CAAC;iBACX;gBACL,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACT;YAED,OAAO,CAAC,CAAC;SACV;QAGD,0DAA0D;QAC1D,YAAY,GAAG,AAAC,WAAY;YAC1B,IAAI,UAAU,gCAAgC,EAC5C,QAAQ,gBAAgB,EACxB,SAAS,gBAAgB,EACzB,eAAe,uBAAuB,EACtC,gBAAgB,+BAA+B,AAAC;YAElD,OAAO,SAAU,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE;gBACjC,IAAI,IAAI,EACN,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,AAAC;gBAEtD,oCAAoC;gBACpC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;qBAClC;oBACL,IAAI,CAAC,KAAK,EAAE;wBAEV,6CAA6C;wBAC7C,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,SAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;4BAC7C,IAAI,GAAG,AAAC,CAAA,EAAE,GAAG,EAAE,CAAC,WAAW,EAAE,CAAA,IAAK,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;4BAC/D,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;yBACjC,CAAC,CAAC;wBAEH,IAAI,CAAC,EAAE;4BACL,IAAI,GAAG,CAAC,CAAC;4BAET,kCAAkC;4BAClC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;yBAC1D;wBAED,IAAI,GAAG,IAAI,CAAC,EAAE,OAAO,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;qBAC7C;oBAED,wCAAwC;oBACxC,iDAAiD;oBACjD,IAAI,SAAS,CAAC,KAAK,EACjB,MAAM,KAAK,CACR,cAAc,GAAG,OAAO,GAAI,CAAA,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAA,GAAI,WAAW,GAAG,GAAG,CAAC,CAAC;oBAG7E,MAAM;oBACN,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBACZ;gBAED,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAClB,CAAA;SACF,EAAG,CAAC;QAGL,gMAGG,CACH,SAAS,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;YAC3B,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACvB,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,MAAM,GAAG,QAAQ,AAAC;YAEpB,iCAAiC;YACjC,IAAI,EAAE,EAAE;gBAEN,mFAAmF;gBACnF,gFAAgF;gBAChF,mCAAmC;gBACnC,kCAAkC;gBAClC,yDAAyD;gBACzD,uEAAuE;gBACvE,GAAG,EAAE;oBAEH,uDAAuD;oBACvD,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;oBAC5C,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;oBAEX,yDAAyD;oBACzD,IAAI,CAAC,GAAG,CAAC,EAAE;wBACT,CAAC,IAAI,QAAQ,CAAC;wBACd,CAAC,GAAG,EAAE,CAAC;wBACP,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;wBAEf,0CAA0C;wBAC1C,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;qBACrC,MAAM;wBACL,EAAE,GAAG,QAAQ,CAAC,AAAC,CAAA,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC;wBAElC,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE;4BAEnB,IAAI,CAAC,EAAE;gCAEL,kBAAkB;gCAClB,MAAO,EAAE,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gCAClC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gCACX,CAAC,GAAG,CAAC,CAAC;gCACN,CAAC,IAAI,QAAQ,CAAC;gCACd,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;6BACtB,MACC,MAAM,GAAG,CAAC;yBAEb,MAAM;4BACL,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;4BAEf,iCAAiC;4BACjC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;4BAEjC,gCAAgC;4BAChC,CAAC,IAAI,QAAQ,CAAC;4BAEd,4DAA4D;4BAC5D,6DAA6D;4BAC7D,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;4BAErB,0CAA0C;4BAC1C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;yBACjD;qBACF;oBAED,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAEf,0DAA0D;oBAC1D,8EAA8E;oBAC9E,+EAA+E;oBAC9E,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,IAAI,IAAK,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,AAAC,CAAC;oBAE3D,CAAC,GAAG,EAAE,GAAG,CAAC,GACP,AAAC,CAAA,EAAE,IAAI,CAAC,CAAA,IAAM,CAAA,EAAE,IAAI,CAAC,IAAI,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAC,CAAA,AAAC,GACjD,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAK,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAE9C,oEAAoE;oBAClE,CAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA,GAAI,EAAE,GAAI,CAAC,IAC9D,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,AAAC,CAAA,AAAC,CAAC;oBAE5B,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;wBACpB,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;wBAEd,IAAI,CAAC,EAAE;4BAEL,gCAAgC;4BAChC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;4BAEd,mCAAmC;4BACnC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,AAAC,CAAA,QAAQ,GAAG,EAAE,GAAG,QAAQ,CAAA,GAAI,QAAQ,CAAC,CAAC;4BACtD,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;yBAChB,MAEC,QAAQ;wBACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAGlB,OAAO,CAAC,CAAC;qBACV;oBAED,wBAAwB;oBACxB,IAAI,CAAC,IAAI,CAAC,EAAE;wBACV,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC;wBACf,CAAC,GAAG,CAAC,CAAC;wBACN,EAAE,EAAE,CAAC;qBACN,MAAM;wBACL,EAAE,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC;wBACnB,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;wBAEzB,uDAAuD;wBACvD,gDAAgD;wBAChD,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACnE;oBAED,YAAY;oBACZ,IAAI,CAAC,EAAE;wBAEL,OAEE,iEAAiE;wBACjE,IAAI,EAAE,IAAI,CAAC,EAAE;4BAEX,mDAAmD;4BACnD,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;4BAC5C,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4BACf,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;4BAEjC,sCAAsC;4BACtC,IAAI,CAAC,IAAI,CAAC,EAAE;gCACV,CAAC,CAAC,CAAC,EAAE,CAAC;gCACN,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;6BAC9B;4BAED,MAAM;yBACP,MAAM;4BACL,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;4BACZ,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,MAAM;4BAC1B,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;4BACb,CAAC,GAAG,CAAC,CAAC;yBACP;qBAEJ;oBAED,yBAAyB;oBACzB,IAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE;iBAC5C;gBAED,sBAAsB;gBACtB,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,EACf,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAGZ,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,EACtB,CAAC,CAAC,CAAC,GAAG;oBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBAAC,CAAC;aAEnB;YAED,OAAO,CAAC,CAAC;SACV;QAGD,SAAS,OAAO,CAAC,CAAC,EAAE;YAClB,IAAI,GAAG,EACL,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEV,IAAI,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEpC,GAAG,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEzB,GAAG,GAAG,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,UAAU,GACpC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,GACrB,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAE9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SAClC;QAGD,6BAA6B;QAG7B,+FAEG,CACH,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,GAAG,WAAY;YACpC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,AAAC;YAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrB,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,oSAMG,CACH,CAAC,CAAC,UAAU,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YAC7B,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC3C,CAAC;QAGF,mqBAYG,CACH,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EACT,CAAC,GAAG,IAAI,AAAC;YAEX,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrB,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,aAAa,CAAC;qBAC9B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAExB,OAAO,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;aAClD;YAED,IAAI,CAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,AAAC,EAAE,OAAO,IAAI,CAAC;YAC5B,CAAC,GAAG,AAAC,CAAA,AAAC,CAAA,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA,GAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAA,GAAI,QAAQ,CAAC;YAElE,4DAA4D;YAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,MAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;YAC9C,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEjB,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,keAmBG,CACH,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACpC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;SACtE,CAAC;QAGF,2JAGG,CACH,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC,IAAI,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YAC9C,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7C,CAAC;QAGF,0tBAcG,CACH,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YAC1C,IAAI,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EACvD,CAAC,GAAG,IAAI,AAAC;YAEX,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAErB,uDAAuD;YACvD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,EACvB,MAAM,KAAK,CACR,cAAc,GAAG,2BAA2B,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAGhE,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAEpC,sCAAsC;YACtC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAElB,kEAAkE;YAClE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAEhF,iFAAiF;gBACjF,yEAAyE;gBACzE,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9E,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACzB;YAED,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEjB,IAAI,CAAC,EAAE;gBAEL,oDAAoD;gBACpD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;gBAEpD,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;gBAErD,IAAI,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE7B,yDAAyD;YACzD,sDAAsD;aACrD,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAK,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,GAEnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,GAEtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAA,AAAC,CAAA,AAAC,EAAE;gBAEpD,qDAAqD;gBACrD,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAEjC,4BAA4B;gBAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAExB,qDAAqD;gBACrD,OAAO,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAE1C,MAAM,IAAI,aAAa,EAEtB,+EAA+E;YAC/E,wEAAwE;YACxE,4DAA4D;YAC5D,CAAC,GAAG,QAAQ,CAAC,aAAa,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;YAG7C,IAAI,MAAM,EAAE;gBACV,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACpB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB,MAAM;gBACL,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;aAChB;YAED,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YAEvB,yDAAyD;YACzD,OAAU;gBAER,IAAI,MAAM,EAAE;oBACV,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACf,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM;oBAEhB,IAAI,CAAC,EACH;wBAAA,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;qBAAA,MAC9B,IAAI,QAAQ,EACjB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAI,kDAAkD;iBAEtE;gBAED,IAAI,CAAC,EAAE;oBACL,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM;oBACnB,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;iBAChB,MAAM;oBACL,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAClB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBAErB,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,EACV,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;yBACb;wBACL,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBAChB,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM;wBACnB,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;qBAChB;iBACF;gBAED,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEf,IAAI,CAAC,EACH;oBAAA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;iBAAA,MACrC,IAAI,QAAQ,EACjB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAI,kDAAkD;aAEtE;YAED,IAAI,QAAQ,EAAE,OAAO,CAAC,CAAC;YACvB,IAAI,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE3B,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC5E,CAAC;QAGF,8VAOG,CACH,CAAC,CAAC,YAAY,GAAG,SAAU,EAAE,EAAE;YAC7B,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,AAAC;YAC5B,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,aAAa,CAAC;iBAC9B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;SAC9B,CAAC;QAGF,wIAGG,CACH,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACnC,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACjD,CAAC;QAGF,0GAEG,CACH,CAAC,CAAC,QAAQ,GAAG,WAAY;YACvB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;SACjB,CAAC;QAGF,4IAGG,CACH,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACvC,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/C,CAAC;QAGF,wJAGG,CACH,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC,GAAG,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACjD,OAAO,AAAC,CAAA,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,KAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAElE,CAAC;QAGF,qGAEG,CACH,CAAC,CAAC,SAAS,GAAG,WAAY;YACxB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACpE,CAAC;QAGF,yIAGG,CACH,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACpC,OAAO,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/C,CAAC;QAGF,qJAGG,CACH,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,GAAG,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YAC9C,OAAO,AAAC,CAAA,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,KAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACnE,CAAC;QAGF,8FAEG,CACH,CAAC,CAAC,KAAK,GAAG,WAAY;YACpB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SAChB,CAAC;QAGF,mGAEG,CACH,CAAC,CAAC,UAAU,GAAG,WAAY;YACzB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB,CAAC;QAGF,mGAEG,CACH,CAAC,CAAC,UAAU,GAAG,WAAY;YACzB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB,CAAC;QAGF,kGAEG,CACH,CAAC,CAAC,MAAM,GAAG,WAAY;YACrB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACnC,CAAC;QAGF,yaAmBG,CACH,CAAC,CAAC,KAAK,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACxB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EACf,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEV,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAER,cAAc;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YAExC,gBAAgB;YAChB,IAAI,CAAC,IAAI,CAAC,EAAE;gBACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YAED,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,EACrB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,EACnB,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;YAEX,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;gBAEd,mBAAmB;gBACnB,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,GAAI,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,GAAI,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;gBAExE,eAAe;gBACf,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAElB,2EAA2E;gBAC3E,OAAO,EAAE,CAAC,CAAC,CAAC,GAAI,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,GAAI,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAErD,6DAA6D;gBAC7D,aAAa,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;aAEjC;YAED,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;YAEhB,wCAAwC;YACxC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAEf,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;oBAChB,CAAC,GAAG,CAAC,CAAC,CAAC;oBACP,CAAC,GAAG,EAAE,CAAC;iBACR,MAAM;oBACL,EAAE,GAAG,EAAE,CAAC;oBACR,CAAC,GAAG,EAAE,CAAC;iBACR;gBAED,CAAC,CAAC,OAAO,EAAE,CAAC;gBAEZ,uCAAuC;gBACvC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,CAAC,CAAC,OAAO,EAAE,CAAC;aACb,MAAM;gBAEL,yCAAyC;gBACzC,CAAC,GAAG,AAAC,CAAA,IAAI,GAAG,AAAC,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,GAAK,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,AAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC;gBAEvD,IAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAExB,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;oBAClB,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;oBACrB,MAAM;iBACP;aAEJ;YAED,qDAAqD;YACrD,IAAI,IAAI,EAAE;gBACR,CAAC,GAAG,EAAE,CAAC;gBACP,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aACZ;YAED,CAAC,GAAG,AAAC,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,GAAK,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,AAAC,CAAC;YAEtC,iCAAiC;YACjC,sFAAsF;YACtF,IAAI,CAAC,GAAG,CAAC,EAAE,MAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;YAClC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;YAEb,uBAAuB;YACvB,MAAO,CAAC,GAAG,CAAC,EAAG;gBAEb,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE;oBACnB,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;oBACpC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBACR,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;iBACf;gBAED,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;aAChB;YAED,wDAAwD;YACxD,MAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE;YAExC,QAAQ;YACR,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBAEV,iCAAiC;gBACjC,gEAAgE;gBAChE,CAAC,CAAC,CAAC,GAAG,aAAa,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,GAAG;oBAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBAAC,CAAC;gBAChB,OAAO,CAAC,CAAC;aACV;YAED,8EAA8E;YAC9E,sBAAsB;YACtB,OAAO,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC7B,CAAC;QAGF,0gBAoBG,CACH,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACjC,IAAI,CAAC,EAAE,CAAC,EACN,CAAC,GAAG,IAAI,AAAC;YAEX,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAExB,2DAA2D;YAC3D,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAChC,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;iBAGrB,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC/B,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAG1B,IAAI,WAAW,IAAI,CAAC,EAAE;gBAEpB,sDAAsD;gBACtD,uCAAuC;gBACvC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACR,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACV,MACC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YAGhC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAExB,kEAAkE;YAClE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE3C,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,8aAmBG,CACH,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EACpD,IAAI,EAAE,QAAQ,EACd,CAAC,GAAG,IAAI,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,AAAC,CAAA,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,CAAC,AAAC;YAEnC,+BAA+B;YAC/B,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBAElC,sEAAsE;gBACtE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAC5D,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAClB;oBACL,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAEX,2CAA2C;oBAC3C,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EACZ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;yBAGZ;wBACL,CAAC,CAAC,CAAC,GAAG;AAAC,6BAAC;yBAAC,CAAC;wBACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBACT;iBACF;gBAED,OAAO,CAAC,CAAC;aACV;YAED,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACX,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;YAChB,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;YAEhB,0DAA0D;YAC1D,IAAI,GAAG,GAAG,GAAG,EAAE;gBACb,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,EAAE,CAAC;gBACR,CAAC,GAAG,GAAG,CAAC;gBACR,GAAG,GAAG,GAAG,CAAC;gBACV,GAAG,GAAG,CAAC,CAAC;aACT;YAED,0CAA0C;YAC1C,IAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YAE5C,IAAI,GAAG,IAAI,CAAC;YACZ,QAAQ,GAAG,SAAS,CAAC;YAErB,IAAK,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAG;gBACvB,CAAC,GAAG,CAAC,CAAC;gBACN,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACvB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;gBAE3B,IAAK,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAG;oBAC/B,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC;oBACzB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;oBAC3B,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;oBAC1B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAI,AAAC,CAAC,GAAG,QAAQ,GAAI,QAAQ,GAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC1D,CAAC,GAAG,AAAC,CAAA,GAAG,GAAG,IAAI,GAAG,CAAC,CAAA,GAAK,CAAA,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAA,GAAI,GAAG,GAAG,GAAG,CAAC;oBACtD,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;iBACtB;gBAED,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACX;YAED,IAAI,CAAC,EACH,EAAE,CAAC,CAAC;iBAEJ,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAGlB,OAAO,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC;QAGF,6HAGG,CACH,CAAC,CAAC,OAAO,GAAG,WAAY;YACtB,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,AAAC;YAC5B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;YACnB,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,qaAmBG,CACH,CAAC,CAAC,IAAI,GAAG,SAAU,CAAC,EAAE,CAAC,EAAE;YACvB,IAAI,CAAC,EACH,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEV,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAER,cAAc;YACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YAExC,gBAAgB;YACf,IAAI,CAAC,IAAI,CAAC,EAAE;gBACX,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACnB;YAED,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,EACrB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,EACnB,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;YAEX,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE;gBAEd,wCAAwC;gBACxC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE5C,eAAe;gBACf,2EAA2E;gBAC3E,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAC3E;YAED,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;YAEhB,+EAA+E;YAC/E,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBACf,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,EAAE,GAAG,EAAE,CAAC;oBACR,CAAC,GAAG,EAAE,CAAC;iBACR,MAAM;oBACL,CAAC,GAAG,CAAC,CAAC,CAAC;oBACP,CAAC,GAAG,EAAE,CAAC;iBACR;gBAED,CAAC,CAAC,OAAO,EAAE,CAAC;gBACZ,MAAO,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrB,CAAC,CAAC,OAAO,EAAE,CAAC;aACb;YAED,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;YACd,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;YAEd,6DAA6D;YAC7D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBACb,CAAC,GAAG,EAAE,CAAC;gBACP,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,CAAC,CAAC;gBACP,CAAC,GAAG,CAAC,CAAC;aACP;YAED,iFAAiF;YACjF,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAG;gBACd,CAAC,GAAG,AAAC,CAAA,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,IAAI,GAAG,CAAC,CAAC;gBAC7C,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAC3C;YAED,IAAI,CAAC,EAAE;gBACL,EAAE,GAAG;oBAAC,CAAC;iBAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBACpB,EAAE,EAAE,CAAC;aACN;YAED,6DAA6D;YAC7D,4BAA4B;YAC5B,OAAO,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC7B,CAAC;QAGF,u2BAcG,CACH,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE;YACrC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EACT,CAAC,GAAG,IAAI,AAAC;YAEX,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;gBAC7B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrB,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,aAAa,CAAC;qBAC9B,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAExB,OAAO,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;aACxC;YAED,IAAI,CAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,AAAC,EAAE,OAAO,IAAI,CAAC;YAC5B,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACjB,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;YAErB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBAEZ,6DAA6D;gBAC7D,MAAO,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;gBAEhC,iDAAiD;gBACjD,IAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;aACrC;YAED,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEnC,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,oXAOG,CACH,CAAC,CAAC,SAAS,GAAG,SAAU,CAAC,EAAE;YACzB,QAAQ,CAAC,CAAC,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;YACjD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;SAC7B,CAAC;QAGF,uTAUG,CACH,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,GAAG,WAAY;YAClC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EACjB,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,EAAE,GAAG,cAAc,GAAG,CAAC,EACvB,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,AAAC;YAE9B,8BAA8B;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACxB,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAK,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,AAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAG1E,oBAAoB;YACpB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAE3B,gCAAgC;YAChC,0EAA0E;YAC1E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACxB,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,AAAC,CAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA,GAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC;gBACtC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,GAAG,QAAQ,CAAC,AAAC,CAAA,CAAC,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,GAAI,CAAA,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;gBAE7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EACZ,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;qBACR;oBACL,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;oBACtB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxC;gBAED,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;aACtB,MACC,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAG5B,kBAAkB;YAClB,0EAA0E;YAC1E,wFAAwF;YACxF,0BAA0B;YAC1B,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACV,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACR,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBACX,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBAEjB,4BAA4B;gBAC5B,OAAU;oBACR,CAAC,GAAG,CAAC,CAAC;oBACN,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEzC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,AAAC,CAAA,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;wBAE3E,yEAAyE;wBACzE,0EAA0E;wBAC1E,yBAAyB;wBACzB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;wBACjB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;wBAE1B,2EAA2E;wBAC3E,uEAAuE;wBACvE,aAAa;wBACb,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE;4BAEtC,qEAAqE;4BACrE,mDAAmD;4BACnD,IAAI,CAAC,GAAG,EAAE;gCACR,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gCAEtC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;oCACpB,CAAC,GAAG,CAAC,CAAC;oCACN,MAAM;iCACP;6BACF;4BAED,EAAE,IAAI,CAAC,CAAC;4BACR,CAAC,IAAI,CAAC,CAAC;4BACP,GAAG,GAAG,CAAC,CAAC;yBACT,MAAM;4BAEL,kEAAkE;4BAClE,sEAAsE;4BACtE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;gCAE7C,wCAAwC;gCACxC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gCACtC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;6BACvB;4BAED,MAAM;yBACP;qBACF;iBACF;aACF;YAED,OAAO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC;SAC7D,CAAC;QAGF,8ZAQG,CACH,CAAC,CAAC,aAAa,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE;YAClC,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrB,EAAE,EAAE,CAAC;aACN;YACD,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SAChC,CAAC;QAGF,ikBAWG,CACH,CAAC,CAAC,OAAO,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE;YAC5B,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACrB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;aACtB;YACD,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAC7B,CAAC;QAGF,ghCAwBG,CACH,CAAC,CAAC,QAAQ,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;YACrC,IAAI,GAAG,EACL,CAAC,GAAG,IAAI,AAAC;YAEX,IAAI,MAAM,IAAI,IAAI,EAAE;gBAClB,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,OAAO,EAAE,IAAI,QAAQ,EAAE;oBAC7C,MAAM,GAAG,EAAE,CAAC;oBACZ,EAAE,GAAG,IAAI,CAAC;iBACX,MAAM,IAAI,EAAE,IAAI,OAAO,EAAE,IAAI,QAAQ,EAAE;oBACtC,MAAM,GAAG,EAAE,CAAC;oBACZ,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;iBAChB,MACC,MAAM,GAAG,MAAM,CAAC;aAEnB,MAAM,IAAI,OAAO,MAAM,IAAI,QAAQ,EAClC,MAAM,KAAK,CACR,cAAc,GAAG,0BAA0B,GAAG,MAAM,CAAC,CAAC;YAG3D,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAExB,IAAI,CAAC,CAAC,CAAC,EAAE;gBACP,IAAI,CAAC,EACH,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EACpB,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EACtB,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAC/B,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,EAAE,EAC5C,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,EAChB,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,EACrB,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EACf,SAAS,GAAG,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,EAC9C,GAAG,GAAG,SAAS,CAAC,MAAM,AAAC;gBAEzB,IAAI,EAAE,EAAE;oBACN,CAAC,GAAG,EAAE,CAAC;oBACP,EAAE,GAAG,EAAE,CAAC;oBACR,EAAE,GAAG,CAAC,CAAC;oBACP,GAAG,IAAI,CAAC,CAAC;iBACV;gBAED,IAAI,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;oBACrB,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC;oBACnB,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACjC,MAAO,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,CAAE,OAAO,IAAI,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC7E,IAAI,EAAE,GAAG,CAAC,EAAE,OAAO,IAAI,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3D,IAAI,KAAK,EAAE,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC;iBACpC;gBAED,GAAG,GAAG,YAAY,GACf,OAAO,GAAI,CAAA,MAAM,CAAC,gBAAgB,IAAI,EAAE,CAAA,GAAK,CAAA,AAAC,CAAA,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAA,GAC3E,YAAY,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,EAC3D,IAAI,GAAI,CAAA,MAAM,CAAC,sBAAsB,IAAI,EAAE,CAAA,AAAC,CAAC,GAC5C,YAAY,CAAA,AAAC,GACd,OAAO,CAAC;aACZ;YAED,OAAO,AAAC,CAAA,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA,GAAI,GAAG,GAAI,CAAA,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA,AAAC,CAAC;SAC5D,CAAC;QAGF,wmBAUG,CACH,CAAC,CAAC,UAAU,GAAG,SAAU,EAAE,EAAE;YAC3B,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC3C,CAAC,GAAG,IAAI,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,AAAC;YAEX,IAAI,EAAE,IAAI,IAAI,EAAE;gBACd,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;gBAEtB,4EAA4E;gBAC5E,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,IAAK,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EACnD,MAAM,KAAK,CACR,cAAc,GAAG,WAAW,GAC1B,CAAA,CAAC,CAAC,SAAS,EAAE,GAAG,gBAAgB,GAAG,kBAAkB,CAAA,GAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAE7E;YAED,IAAI,CAAC,EAAE,EAAE,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAEjC,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YACvB,EAAE,GAAG,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YAC7B,EAAE,GAAG,EAAE,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;YAEtB,iCAAiC;YACjC,uFAAuF;YACvF,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,AAAC,CAAA,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAA,GAAI,CAAC,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACnE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAI,CAAC,CAAC;YAEvD,GAAG,GAAG,OAAO,CAAC;YACd,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAErB,cAAc;YACd,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEZ,OAAW;gBACT,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAI,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,MAAM;gBAClC,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,EAAE,CAAC;gBACR,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC/B,EAAE,GAAG,EAAE,CAAC;gBACR,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,GAAG,EAAE,CAAC;aACR;YAED,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEV,0DAA0D;YAC1D,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CACvD,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG;gBAAC,EAAE;gBAAE,EAAE;aAAC,GAAG;gBAAC,EAAE;gBAAE,EAAE;aAAC,CAAC;YAE5E,OAAO,GAAG,GAAG,CAAC;YAEd,OAAO,CAAC,CAAC;SACV,CAAC;QAGF,uFAEG,CACH,CAAC,CAAC,QAAQ,GAAG,WAAY;YACvB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvB,CAAC;QAGF,6jBAUG,CACH,CAAC,CAAC,WAAW,GAAG,SAAU,EAAE,EAAE,EAAE,EAAE;YAChC,IAAI,EAAE,IAAI,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YACrC,OAAO,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SAChC,CAAC;QAGF,smBAUG,CACH,CAAC,CAAC,QAAQ,GAAG,SAAU,CAAC,EAAE;YACxB,IAAI,GAAG,EACL,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEV,mBAAmB;YACnB,IAAI,CAAC,KAAK,IAAI;gBACZ,IAAI,CAAC,EAAE;oBACL,GAAG,GAAG,UAAU,CAAC;oBACjB,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;iBAC5B,MACC,GAAG,GAAG,KAAK,CAAC;mBAET;gBACL,IAAI,CAAC,IAAI,IAAI,EACX,GAAG,GAAG,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI,UAAU,GACrC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GACpC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;qBACvC,IAAI,CAAC,KAAK,EAAE,IAAI,8BAA8B,EAAE;oBACrD,CAAC,GAAG,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,cAAc,GAAG,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC;oBACnE,GAAG,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;iBAClD,MAAM;oBACL,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;oBACxC,GAAG,GAAG,WAAW,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;iBAC7E;gBAED,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;aACtC;YAED,OAAO,GAAG,CAAC;SACZ,CAAC;QAGF,gIAGG,CACH,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,GAAG,WAAY;YACjC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB,CAAC;QAGF,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QAEtB,IAAI,YAAY,IAAI,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEtD,OAAO,SAAS,CAAC;KAClB;IAGD,2BAA2B;IAE3B,kDAAkD;IAClD,mEAAmE;IAGnE,SAAS,QAAQ,CAAC,CAAC,EAAE;QACnB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACrC;IAGD,4DAA4D;IAC5D,SAAS,aAAa,CAAC,CAAC,EAAE;QACxB,IAAI,CAAC,EAAE,CAAC,EACN,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,CAAC,MAAM,EACZ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,AAAC;QAEhB,MAAO,CAAC,GAAG,CAAC,EAAG;YACb,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YAChB,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC;YACxB,MAAO,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;YACvB,CAAC,IAAI,CAAC,CAAC;SACR;QAED,4BAA4B;QAC5B,IAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE;QAE3C,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/B;IAGD,2CAA2C;IAC3C,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;QACrB,IAAI,CAAC,EAAE,CAAC,EACN,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,EAAE,GAAG,CAAC,CAAC,CAAC,EACR,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,EACP,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QAEV,cAAc;QACd,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;QAE1B,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjB,eAAe;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAEtC,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;QAErB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACV,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEX,mBAAmB;QACnB,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAEhD,qBAAqB;QACrB,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAElC,CAAC,GAAG,AAAC,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,GAAK,CAAA,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA,AAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAE9C,0BAA0B;QAC1B,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAE9E,mBAAmB;QACnB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KACxC;IAGD,8FAEG,CACH,SAAS,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAC1C,MAAM,KAAK,CACT,cAAc,GAAI,CAAA,IAAI,IAAI,UAAU,CAAA,GAAK,CAAA,OAAO,CAAC,IAAI,QAAQ,GAC1D,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,iBAAiB,GAAG,mBAAmB,GAC5D,2BAA2B,CAAA,GAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAElD;IAGD,oBAAoB;IACpB,SAAS,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,AAAC;QACvB,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACzD;IAGD,SAAS,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE;QAC7B,OAAO,AAAC,CAAA,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA,GAC/D,CAAA,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAA,GAAI,CAAC,CAAC;KAC3B;IAGD,SAAS,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;QAC/B,IAAI,GAAG,EAAE,EAAE,AAAC;QAEZ,qBAAqB;QACrB,IAAI,CAAC,GAAG,CAAC,EAAE;YAET,iBAAiB;YACjB,IAAK,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC;YAC/B,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;QAEjB,oBAAoB;SACnB,MAAM;YACL,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;YAEjB,gBAAgB;YAChB,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE;gBACb,IAAK,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC;gBACnC,GAAG,IAAI,EAAE,CAAC;aACX,MAAM,IAAI,CAAC,GAAG,GAAG,EAChB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAE9C;QAED,OAAO,GAAG,CAAC;KACZ;IAGD,SAAS;IAGT,SAAS,GAAG,KAAK,EAAE,CAAC;IACpB,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IAEvD,OAAO;IACP,IAAI,OAAO,MAAM,IAAI,UAAU,IAAI,MAAM,CAAC,GAAG,EAC3C,MAAM,CAAC,WAAY;QAAE,OAAO,SAAS,CAAC;KAAE,CAAC,CAAC;SAGrC,IAAoC,MAAM,CAAC,OAAO,EACvD,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;SAGtB;QACL,IAAI,CAAC,YAAY,EACf,YAAY,GAAG,OAAO,IAAI,IAAI,WAAW,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC;QAGpE,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;KACpC;CACF,CAAA,CAAE,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC72FT;;AAaA,6CAAa,OAAO,CAqBnB;oDAEY,cAAc;AApC3B,uCAAwC;AACxC,+BAAsC;AAY/B,MAAM,OAAO;IAChB,YACqB,KAAa,EACb,SAAqB,EACrB,WAAyB,CAC5C;aAHmB,KAAa,GAAb,KAAa;aACb,SAAqB,GAArB,SAAqB;aACrB,WAAyB,GAAzB,WAAyB;KAC1C;IAEJ,AAAO,OAAO,CAAC,IAAY,EAAuB;QAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,AAAC;QACrD,OAAO,IAAI,KAAK,SAAS,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;KAC/F;IAED,AAAO,WAAW,CAAC,IAAY,EAA2B;QACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,AAAC;QAC7D,OAAO,QAAQ,KAAK,SAAS,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;KAC3G;IAED,AAAO,aAAa,CAAC,IAAY,EAA6B;QAC1D,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,AAAC;QACjE,OAAO,UAAU,KAAK,SAAS,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,CAAC,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;KACjH;CACJ;AAEM,MAAM,cAAc,GAAG,IAAI,OAAO,CACrC;IACI;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,CAAC;KAAE;IAC9C;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,EAAE;KAAE;IAC/C;QAAE,IAAI,EAAE,GAAG;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,IAAI;KAAE;IAChD;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,OAAO;KAAE;IACpD;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,IAAI;KAAE;IACjD;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,KAAK;KAAE;IAElD;QAAE,IAAI,EAAE,GAAG;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,CAAC;KAAE;IAC7C;QAAE,IAAI,EAAE,KAAK;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,EAAE;KAAE;IAChD;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,IAAI;KAAE;IACjD;QAAE,IAAI,EAAE,GAAG;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,OAAO;KAAE;IACnD;QAAE,IAAI,EAAE,IAAI;QAAE,KAAK,EAAE,QAAQ;QAAE,UAAU,EAAE,OAAO;KAAE;CACvD,EACD;IACI;QAAE,IAAI,EAAE,GAAG;QAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;KAAE;IAC7C;QAAE,IAAI,EAAE,GAAG;QAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;KAAE;IAC9C;QAAE,IAAI,EAAE,GAAG;QAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;KAAE;IAC9C;QAAE,IAAI,EAAE,GAAG;QAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;KAAE;IAClD;QAAE,IAAI,EAAE,GAAG;QAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAAE;CAC/C,EACD;IACI;QAAE,IAAI,EAAE,KAAK;QAAE,SAAS,EAAE,CAAC,EAAE,GAAK,CAAA,GAAA,YAAK,CAAA,CAAC,GAAG,CAAC,EAAE,CAAC;KAAE;IACjD;QAAE,IAAI,EAAE,SAAS;QAAE,SAAS,EAAE,CAAC,EAAE,GAAK,CAAA,GAAA,YAAK,CAAA,CAAC,OAAO,CAAC,EAAE,CAAC;KAAE;CAC5D,CACJ,AAAC;;;AC9DF;;AAGA,iDAAa,WAAW,CAkCvB;AArCD,uCAAwC;AAGjC,MAAM,WAAW;IACpB,YACqB,SAA6B,GAAG,IAAI,GAAG,EAAE,EACzC,OAAoC,GAAG,EAAE,CAC5D;aAFmB,SAA6B,GAA7B,SAA6B;aAC7B,OAAoC,GAApC,OAAoC;KACrD;IAEJ,AAAO,WAAW,CAAC,IAAY,EAAE,KAAY,EAAQ;QACjD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACnC;IAED,AAAO,WAAW,CAAC,IAAY,EAAwB;QACnD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;QACvC,OAAO,KAAK,KAAK,SAAS,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC,CAAC,GAAG,CAAA,GAAA,cAAM,CAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;KACvG;IAED,AAAO,SAAS,CAAC,MAA4B,EAAQ;QACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,AAAO,SAAS,GAAa;QACzB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,GAAM,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,AAAC,CAAC,CAAC;KACvG;IAED,AAAO,mBAAmB,GAAY;QAClC,IAAI,MAAM,GAAY,EAAE,AAAC;QACzB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAC7B,IAAI,MAAM,CAAC,KAAK,EACZ,MAAM,GAAG,EAAE,CAAC;aAEZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAGlC,OAAO,MAAM,CAAC;KACjB;CACJ","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-74a92386c515f27c.js","src/index.ts","node_modules/js-base64/base64.mjs","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/execute.ts","src/lex.ts","node_modules/@badrap/result/dist/index.module.mjs","node_modules/@badrap/result/src/index.ts","src/parse.ts","src/assertNever.ts","src/evaluate.ts","src/Value.ts","node_modules/bignumber.js/bignumber.js","src/Context.ts","src/Environment.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { Base64 } from 'js-base64';\nimport { execute } from './execute';\n\nconst inputEl = document.getElementById('input') as HTMLTextAreaElement;\nconst outputEl = document.getElementById('output') as HTMLTextAreaElement;\n\nconst debounce = (fn: () => unknown, ms: number) => {\n    let timeoutId: number;\n    return () => {\n        clearTimeout(timeoutId);\n        timeoutId = window.setTimeout(fn, ms);\n    };\n};\n\nconst debouncedListener = debounce(() => {\n    outputEl.value = execute(inputEl.value);\n    window.location.hash = Base64.encode(inputEl.value);\n}, 100);\n\ninputEl.addEventListener('keyup', debouncedListener);\n\ninputEl.value = Base64.decode(window.location.hash.substring(1));\ndebouncedListener();\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { lex } from './lex';\nimport { parse } from './parse';\nimport { evaluate } from './evaluate';\nimport { defaultContext } from './Context';\nimport { Environment } from './Environment';\n\nexport function execute(input: string): string {\n    const lines = input.split('\\n');\n    const environment = new Environment();\n\n    for (const line of lines) {\n        environment.addResult(\n            lex(line)\n                .chain(parse)\n                .chain((ast) => evaluate(defaultContext, environment, ast)),\n        );\n    }\n\n    return environment.getOutput().join('\\n');\n}\n","import { Result } from '@badrap/result';\n\nexport type TokenType = 'literal' | 'operator' | 'assignment' | 'lparen' | 'rparen' | 'identifier';\nexport type Token = { type: TokenType; value: string };\nexport type Tokens = Token[];\n\ntype Scanner = (input: string) => [Token, string] | null;\n\nconst scanners = [\n    regexScanner(/^([0-9]+(?:[,.][0-9]+)?)\\s*(.*)$/, 'literal'),\n    regexScanner(/^([+\\-^*/])\\s*(.*)$/, 'operator'),\n    regexScanner(/^([(])\\s*(.*)$/, 'lparen'),\n    regexScanner(/^([)])\\s*(.*)$/, 'rparen'),\n    regexScanner(/^([:=])\\s*(.*)$/, 'assignment'),\n    regexScanner(/^([a-zA-Z\\u00C0-\\u024F_][a-zA-Z0-9\\u00C0-\\u024F_]*)\\s*(.*)$/, 'identifier'),\n];\n\nexport function lex(line: string): Result<Tokens, Error> {\n    const tokens: Tokens = [];\n    line = line.trim();\n    while (line.length > 0) {\n        const result = tryScanners(scanners, line);\n        if (result === null) {\n            return Result.err(new Error('Cannot lex ' + line));\n        } else {\n            tokens.push(result[0]);\n            line = result[1];\n        }\n    }\n    return Result.ok(tokens);\n}\n\nfunction tryScanners(scanners: Scanner[], line: string): [Token, string] | null {\n    for (const scanner of scanners) {\n        const result = scanner(line);\n        if (result !== null) {\n            return result;\n        }\n    }\n    return null;\n}\n\nfunction regexScanner(regex: RegExp, type: TokenType): Scanner {\n    return (input: string) => {\n        const matched = input.match(regex);\n        if (matched !== null) {\n            return [{ type, value: matched[1] }, matched[2]];\n        }\n        return null;\n    };\n}\n",null,"abstract class _Result<T, E extends Error> {\n  protected abstract _chain<X, U extends Error>(\n    ok: (value: T) => Result<X, U>,\n    err: (error: E) => Result<X, U>\n  ): Result<X, U>;\n\n  unwrap(): T;\n  unwrap<U>(ok: (value: T) => U): U;\n  unwrap<U, V>(ok: (value: T) => U, err: (error: E) => V): U | V;\n  unwrap<U>(ok: (value: T) => U, err: (error: E) => U): U;\n  unwrap(ok?: (value: T) => unknown, err?: (error: E) => unknown): unknown {\n    const r = this._chain(\n      value => Result.ok(ok ? ok(value) : value),\n      error => (err ? Result.ok(err(error)) : Result.err(error))\n    );\n    if (r.isErr) {\n      throw r.error;\n    }\n    return r.value;\n  }\n\n  map<U>(ok: (value: T) => U): Result<U, E>;\n  map<U, F extends Error>(\n    ok: (value: T) => U,\n    err: (error: E) => F\n  ): Result<U, F>;\n  map(ok: (value: T) => unknown, err?: (error: E) => Error): Result<unknown> {\n    return this._chain(\n      value => Result.ok(ok(value)),\n      error => Result.err(err ? err(error) : error)\n    );\n  }\n\n  chain<X>(ok: (value: T) => Result<X, E>): Result<X, E>;\n  chain<X>(\n    ok: (value: T) => Result<X, E>,\n    err: (error: E) => Result<X, E>\n  ): Result<X, E>;\n  chain<X, U extends Error>(\n    ok: (value: T) => Result<X, U>,\n    err: (error: E) => Result<X, U>\n  ): Result<X, U>;\n  chain(\n    ok: (value: T) => Result<unknown>,\n    err?: (error: E) => Result<unknown>\n  ): Result<unknown> {\n    return this._chain(ok, err || (error => Result.err(error)));\n  }\n}\n\nclass _Ok<T, E extends Error> extends _Result<T, E> {\n  readonly isOk = true;\n  readonly isErr = false;\n  constructor(readonly value: T) {\n    super();\n  }\n\n  protected _chain<X, U extends Error>(\n    ok: (value: T) => Result<X, U>,\n    _err: (error: E) => Result<X, U>\n  ): Result<X, U> {\n    return ok(this.value);\n  }\n}\n\nclass _Err<T, E extends Error> extends _Result<T, E> {\n  readonly isOk = false;\n  readonly isErr = true;\n  constructor(readonly error: E) {\n    super();\n  }\n\n  protected _chain<X, U extends Error>(\n    _ok: (value: T) => Result<X, U>,\n    err: (error: E) => Result<X, U>\n  ): Result<X, U> {\n    return err(this.error);\n  }\n}\n\nexport namespace Result {\n  export interface Ok<T, E extends Error> extends _Ok<T, E> {}\n  export interface Err<T, E extends Error> extends _Err<T, E> {}\n\n  export function ok<T, E extends Error>(value: T): Result<T, E> {\n    return new _Ok(value);\n  }\n  export function err<E extends Error, T = never>(error?: E): Result<T, E>\n  export function err<E extends Error, T = never>(error: E): Result<T, E> {\n    return new _Err(error || new Error());\n  }\n\n  type U = Result<unknown>;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U,\n    R11 extends U,\n    R12 extends U,\n    R13 extends U,\n    R14 extends U,\n    R15 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>,\n      OkType<R11>,\n      OkType<R12>,\n      OkType<R13>,\n      OkType<R14>,\n      OkType<R15>\n    ],\n    ErrType<\n      | R0\n      | R1\n      | R2\n      | R3\n      | R4\n      | R5\n      | R6\n      | R7\n      | R8\n      | R9\n      | R10\n      | R11\n      | R12\n      | R13\n      | R14\n      | R15\n    >\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U,\n    R11 extends U,\n    R12 extends U,\n    R13 extends U,\n    R14 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>,\n      OkType<R11>,\n      OkType<R12>,\n      OkType<R13>,\n      OkType<R14>\n    ],\n    ErrType<\n      | R0\n      | R1\n      | R2\n      | R3\n      | R4\n      | R5\n      | R6\n      | R7\n      | R8\n      | R9\n      | R10\n      | R11\n      | R12\n      | R13\n      | R14\n    >\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U,\n    R11 extends U,\n    R12 extends U,\n    R13 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>,\n      OkType<R11>,\n      OkType<R12>,\n      OkType<R13>\n    ],\n    ErrType<\n      R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9 | R10 | R11 | R12 | R13\n    >\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U,\n    R11 extends U,\n    R12 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>,\n      OkType<R11>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9 | R10 | R11>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U,\n    R11 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>,\n      OkType<R11>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9 | R10 | R11>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U,\n    R10 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>,\n      OkType<R10>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9 | R10>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U,\n    R9 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8, R9]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>,\n      OkType<R9>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U,\n    R8 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7, R8]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>,\n      OkType<R8>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7 | R8>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U,\n    R7 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6, R7]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>,\n      OkType<R7>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6 | R7>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U,\n    R6 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5, R6]\n  ): Result<\n    [\n      OkType<R0>,\n      OkType<R1>,\n      OkType<R2>,\n      OkType<R3>,\n      OkType<R4>,\n      OkType<R5>,\n      OkType<R6>\n    ],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5 | R6>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U,\n    R5 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4, R5]\n  ): Result<\n    [OkType<R0>, OkType<R1>, OkType<R2>, OkType<R3>, OkType<R4>, OkType<R5>],\n    ErrType<R0 | R1 | R2 | R3 | R4 | R5>\n  >;\n  export function all<\n    R0 extends U,\n    R1 extends U,\n    R2 extends U,\n    R3 extends U,\n    R4 extends U\n  >(\n    obj: [R0, R1, R2, R3, R4]\n  ): Result<\n    [OkType<R0>, OkType<R1>, OkType<R2>, OkType<R3>, OkType<R4>],\n    ErrType<R0 | R1 | R2 | R3 | R4>\n  >;\n  export function all<R0 extends U, R1 extends U, R2 extends U, R3 extends U>(\n    obj: [R0, R1, R2, R3]\n  ): Result<\n    [OkType<R0>, OkType<R1>, OkType<R2>, OkType<R3>],\n    ErrType<R0 | R1 | R2 | R3>\n  >;\n  export function all<R0 extends U, R1 extends U, R2 extends U>(\n    obj: [R0, R1, R2]\n  ): Result<[OkType<R0>, OkType<R1>, OkType<R2>], ErrType<R0 | R1 | R2>>;\n  export function all<R0 extends U, R1 extends U>(\n    obj: [R0, R1]\n  ): Result<[OkType<R0>, OkType<R1>], ErrType<R0 | R1>>;\n  export function all<R0 extends U>(\n    obj: [R0]\n  ): Result<[OkType<R0>], ErrType<R0>>;\n  export function all(obj: []): Result<[]>;\n  export function all<T extends Array<U> | Record<string, U>>(\n    obj: T\n  ): Result<\n    { [K in keyof T]: T[K] extends Result<infer I> ? I : never },\n    {\n      [K in keyof T]: T[K] extends Result<unknown, infer E> ? E : never;\n    }[keyof T]\n  >;\n  export function all(obj: unknown): unknown {\n    if (Array.isArray(obj)) {\n      const res = [];\n      for (let i = 0; i < obj.length; i++) {\n        const item = obj[i];\n        if (item.isErr) {\n          return item;\n        }\n        res.push(item.value);\n      }\n      return Result.ok(res);\n    }\n\n    const res: Record<string, unknown> = {};\n    const keys = Object.keys(obj as Record<string, U>);\n    for (let i = 0; i < keys.length; i++) {\n      const item = (obj as Record<string, U>)[keys[i]];\n      if (item.isErr) {\n        return item;\n      }\n      res[keys[i]] = item.value;\n    }\n    return Result.ok(res);\n  }\n}\n\nexport type Result<T, E extends Error = Error> =\n  | Result.Ok<T, E>\n  | Result.Err<T, E>;\n\ntype OkType<R extends Result<unknown>> = R extends Result<infer O> ? O : never;\ntype ErrType<R extends Result<unknown>> = R extends Result<unknown, infer E>\n  ? E\n  : never;\n","import { Result } from '@badrap/result';\nimport { assertNever } from './assertNever';\nimport { Token, Tokens } from './lex';\n\nexport type ASTNode =\n    | { type: 'operator'; operator: string; lhs: ASTNode; rhs: ASTNode }\n    | { type: 'negation'; operand: ASTNode }\n    | { type: 'assignment'; variableName: string; expression: ASTNode }\n    | { type: 'number'; value: string; unit?: string }\n    | { type: 'variable'; name: string }\n    | { type: 'empty' };\n\nexport type AST = ASTNode;\n\ntype StackItem =\n    | { type: 'lparen' }\n    | { type: 'operator'; operator: string; precedence: number }\n    | { type: 'negation' }\n    | { type: 'assignment' };\n\ntype ParserState = {\n    tokens: Tokens;\n    index: number;\n    operators: StackItem[];\n    operands: ASTNode[];\n    error: string | null;\n    nextMinus: 'unary' | 'binary';\n};\n\nexport function parse(tokens: Tokens): Result<AST, Error> {\n    if (tokens.length === 0) {\n        return Result.ok({ type: 'empty' });\n    }\n\n    let state: ParserState = {\n        tokens,\n        index: 0,\n        operators: [],\n        operands: [],\n        error: null,\n        nextMinus: 'unary',\n    };\n    let token = state.tokens[state.index];\n    while (token !== undefined && state.error === null) {\n        state = tryParsers(state, token);\n        state.index++;\n        token = state.tokens[state.index];\n    }\n\n    if (state.error !== null) {\n        return Result.err(new Error(state.error));\n    }\n\n    return parseRemainingStack(state);\n}\n\nfunction tryParsers(state: ParserState, token: Token): ParserState {\n    switch (token.type) {\n        case 'literal':\n            return parseLiteral(state, token.value);\n        case 'operator':\n            return parseOperator(state, token.value);\n        case 'lparen':\n            return parseLeftParen(state);\n        case 'rparen':\n            return parseRightParen(state);\n        case 'identifier':\n            return parseIdentifier(state, token.value);\n        case 'assignment':\n            return parseAssignment(state);\n        default:\n            assertNever(token.type);\n    }\n}\n\nfunction parseLiteral(state: ParserState, literal: string): ParserState {\n    let unit = undefined;\n    const nextToken = state.tokens[state.index + 1];\n    if (nextToken?.type === 'identifier') {\n        unit = nextToken.value;\n        state.index++;\n    }\n    state.nextMinus = 'binary';\n    state.operands.push({ type: 'number', value: literal, unit });\n    return state;\n}\n\nfunction parseOperator(state: ParserState, operatorSymbol: string): ParserState {\n    const precedence = {\n        '+': 100,\n        '-': 100,\n        '*': 200,\n        '/': 200,\n        '^': 300,\n    }[operatorSymbol];\n    const associativity = {\n        '+': 'left',\n        '-': 'left',\n        '*': 'left',\n        '/': 'left',\n        '^': 'right',\n    }[operatorSymbol];\n    if (precedence === undefined || associativity === undefined) {\n        state.error = 'Missing precedence/associativity for ' + operatorSymbol;\n        return state;\n    }\n\n    state.nextMinus = 'unary';\n    let stackTop = peek(state.operators);\n    while (\n        stackTop?.type === 'operator' &&\n        (stackTop.precedence > precedence || (stackTop.precedence === precedence && associativity === 'left'))\n    ) {\n        state.operators.pop();\n        const rhs = state.operands.pop();\n        const lhs = state.operands.pop();\n        if (lhs === undefined || rhs === undefined) {\n            state.error = 'Not enough arguments for ' + operatorSymbol;\n            return state;\n        }\n        state.operands.push({\n            type: 'operator',\n            operator: stackTop.operator,\n            lhs,\n            rhs,\n        });\n        stackTop = peek(state.operators);\n    }\n    state.operators.push({\n        type: 'operator',\n        operator: operatorSymbol,\n        precedence: precedence,\n    });\n    return state;\n}\n\nfunction parseLeftParen(state: ParserState): ParserState {\n    state.nextMinus = 'unary';\n    state.operators.push({ type: 'lparen' });\n    return state;\n}\n\nfunction parseRightParen(state: ParserState): ParserState {\n    state.nextMinus = 'binary';\n    let stackTop = peek(state.operators);\n    while (stackTop?.type === 'operator') {\n        state.operators.pop();\n        const rhs = state.operands.pop();\n        const lhs = state.operands.pop();\n        if (lhs === undefined || rhs === undefined) {\n            state.error = 'Not enough arguments for ' + stackTop.operator;\n            return state;\n        }\n        state.operands.push({\n            type: 'operator',\n            operator: stackTop.operator,\n            lhs,\n            rhs,\n        });\n        stackTop = peek(state.operators);\n    }\n\n    if (stackTop?.type !== 'lparen') {\n        state.error = 'Unbalanced left parens';\n        return state;\n    }\n\n    state.operators.pop();\n\n    return state;\n}\n\nfunction parseAssignment(state: ParserState): ParserState {\n    state.operators.push({\n        type: 'assignment',\n    });\n    return state;\n}\n\nfunction parseIdentifier(state: ParserState, identifier: string): ParserState {\n    state.operands.push({\n        type: 'variable',\n        name: identifier,\n    });\n    return state;\n}\n\nfunction peek<T>(xs: T[]): T | undefined {\n    return xs[xs.length - 1];\n}\n\nfunction parseRemainingStack(state: ParserState): Result<AST, Error> {\n    let stackTop = state.operators.pop();\n    while (stackTop !== undefined) {\n        if (stackTop.type === 'lparen') {\n            state.error = 'Unbalanced parens';\n            break;\n        } else if (stackTop.type === 'negation') {\n            const operand = state.operands.pop();\n            if (operand === undefined) {\n                state.error = 'Not enough arguments for negation';\n                break;\n            }\n            state.operands.push({\n                type: 'negation',\n                operand,\n            });\n            stackTop = state.operators.pop();\n        } else if (stackTop.type === 'assignment') {\n            const expression = state.operands.pop();\n            if (expression === undefined) {\n                state.error = 'No value for assignment';\n                break;\n            }\n            const variableNode = state.operands.pop();\n            if (variableNode?.type !== 'variable') {\n                state.error = 'No name for assignment, instead ' + variableNode?.type;\n                break;\n            }\n            state.operands.push({\n                type: 'assignment',\n                variableName: variableNode.name,\n                expression,\n            });\n            stackTop = state.operators.pop();\n        } else if (stackTop.type === 'operator') {\n            const rhs = state.operands.pop();\n            const lhs = state.operands.pop();\n            if (lhs === undefined || rhs === undefined) {\n                state.error = 'Not enough arguments for ' + stackTop.operator;\n                break;\n            }\n            state.operands.push({\n                type: 'operator',\n                operator: stackTop.operator,\n                lhs,\n                rhs,\n            });\n            stackTop = state.operators.pop();\n        } else {\n            assertNever(stackTop);\n        }\n    }\n\n    if (state.error !== null) {\n        return Result.err(new Error(state.error));\n    }\n\n    const result = state.operands.pop();\n    if (result === undefined) {\n        return Result.err(new Error('No operands left'));\n    }\n\n    return Result.ok(result);\n}\n","export function assertNever(x: never): never {\n    throw new Error('Unexpected object: ' + x);\n}\n","import { Result } from '@badrap/result';\nimport { Context } from './Context';\nimport { Environment } from './Environment';\nimport { AST } from './parse';\nimport { assertNever } from './assertNever';\nimport { Value } from './Value';\n\nexport function evaluate(context: Context, environment: Environment, ast: AST): Result<Value, Error> {\n    switch (ast.type) {\n        case 'number':\n            return ast.unit === undefined \n                ? Result.ok(new Value(ast.value.replace(',', '.')))\n                : context.getUnit(ast.unit).map((unit) => new Value(ast.value.replace(',', '.'), unit));\n        case 'operator':\n            return context.getOperator(ast.operator).chain((operator) => {\n                const lhs = evaluate(context, environment, ast.lhs);\n                if (lhs.isErr) {\n                    return lhs;\n                }\n                const rhs = evaluate(context, environment, ast.rhs);\n                if (rhs.isErr) {\n                    return rhs;\n                }\n                return operator.operation(lhs.value, rhs.value)\n            });\n        case 'negation':\n            return evaluate(context, environment, ast.operand).chain((value) => value.negated());\n        case 'assignment':\n            return evaluate(context, environment, ast.expression).map((value) => {\n                environment.setVariable(ast.variableName, value);\n                return value;\n            });\n        case 'variable':\n            return context.getAggregator(ast.name).chain(\n                (aggregator) => aggregator.operation(environment.getAggregatorValues()),\n                () => environment.getVariable(ast.name),\n            );\n        case 'empty':\n            return Result.err(new Error(''));\n        default:\n            assertNever(ast);\n    }\n}\n","import { Result } from '@badrap/result';\nimport BigNumber from 'bignumber.js';\n\nexport type Unit = {\n    name: string;\n    group: 'weight' | 'length' | 'volume';\n    multiplier: number;\n};\n\nexport class Value {\n    public readonly bignum: BigNumber;\n\n    public constructor(bignum: BigNumber.Value, public readonly unit?: Unit) {\n        this.bignum = new BigNumber(bignum);\n    }\n\n    public toString(): string {\n        return this.bignum.toString() + (this.unit ? ` ${this.unit.name}` : '');\n    }\n\n    public plus(other: Value): Result<Value, Error> {\n        if (this.unit === undefined || other.unit === undefined) {\n            return Result.ok(new Value(this.bignum.plus(other.bignum), this.unit ?? other.unit));\n        }\n\n        if (this.unit.group !== other.unit.group) {\n            return Result.err(new Error('Cannot addd ' + other.unit.name + ' to ' + this.unit.name));\n        }\n\n        return Result.ok(\n            new Value(\n                this.bignum\n                    .times(this.unit.multiplier)\n                    .plus(other.bignum.times(other.unit.multiplier))\n                    .dividedBy(this.unit.multiplier),\n                this.unit,\n            ),\n        );\n    }\n\n    public minus(other: Value): Result<Value, Error> {\n        if (this.unit === undefined || other.unit === undefined) {\n            return Result.ok(new Value(this.bignum.minus(other.bignum), this.unit ?? other.unit));\n        }\n\n        if (this.unit.group !== other.unit.group) {\n            return Result.err(new Error('Cannot subtract ' + other.unit.name + ' from ' + this.unit.name));\n        }\n\n        return Result.ok(\n            new Value(\n                this.bignum\n                    .times(this.unit.multiplier)\n                    .minus(other.bignum.times(other.unit.multiplier))\n                    .dividedBy(this.unit.multiplier),\n                this.unit,\n            ),\n        );\n    }\n\n    public times(other: Value): Result<Value, Error> {\n        if (this.unit !== undefined || other.unit !== undefined) {\n            return Result.err(new Error('Cannot multiply values with units'));\n        }\n        return Result.ok(new Value(this.bignum.times(other.bignum), this.unit));\n    }\n\n    public dividedBy(other: Value): Result<Value, Error> {\n        if (this.unit !== undefined || other.unit !== undefined) {\n            return Result.err(new Error('Cannot divide values with units'));\n        }\n        return Result.ok(new Value(this.bignum.dividedBy(other.bignum), this.unit));\n    }\n\n    public pow(other: Value): Result<Value, Error> {\n        if (this.unit !== undefined || other.unit !== undefined) {\n            return Result.err(new Error('Cannot pow values with units'));\n        }\n        return Result.ok(new Value(this.bignum.pow(other.bignum), this.unit));\n    }\n\n    public negated(): Result<Value, Error> {\n        if (this.unit !== undefined) {\n            return Result.err(new Error('Cannot negate value with unit'));\n        }\n        return Result.ok(new Value(this.bignum.negated(), this.unit));\n    }\n\n    public static sum(values: Value[]): Result<Value, Error> {\n        let result = undefined;\n        for (const value of values) {\n            if (result === undefined) {\n                result = Result.ok(value);\n            } else {\n                result = result.chain((prev) => prev.plus(value));\n            }\n        }\n        return result === undefined ? Result.err(new Error('No values')) : result;\n    }\n\n    public static average(values: Value[]): Result<Value, Error> {\n        return Value.sum(values).chain((value) => value.dividedBy(new Value(values.length)));\n    }\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }  \r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }  \r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }  \r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }  \r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","import { Result } from '@badrap/result';\nimport { Value, Unit } from './Value';\n\ntype Operator = {\n    name: string;\n    operation: (lhs: Value, rhs: Value) => Result<Value, Error>;\n};\n\ntype Aggregator = {\n    name: string;\n    operation: (values: Value[]) => Result<Value, Error>;\n};\n\nexport class Context {\n    public constructor(\n        private readonly units: Unit[],\n        private readonly operators: Operator[],\n        private readonly aggregators: Aggregator[],\n    ) {}\n\n    public getUnit(name: string): Result<Unit, Error> {\n        const unit = this.units.find((a) => a.name === name);\n        return unit === undefined ? Result.err(new Error('Unknown unit ' + name)) : Result.ok(unit);\n    }\n\n    public getOperator(name: string): Result<Operator, Error> {\n        const operator = this.operators.find((a) => a.name === name);\n        return operator === undefined ? Result.err(new Error('Unknown operator ' + name)) : Result.ok(operator);\n    }\n\n    public getAggregator(name: string): Result<Aggregator, Error> {\n        const aggregator = this.aggregators.find((a) => a.name === name);\n        return aggregator === undefined ? Result.err(new Error('Unknown aggregator ' + name)) : Result.ok(aggregator);\n    }\n}\n\nexport const defaultContext = new Context(\n    [\n        { name: 'mm', group: 'length', multiplier: 1 },\n        { name: 'cm', group: 'length', multiplier: 10 },\n        { name: 'm', group: 'length', multiplier: 1000 },\n        { name: 'km', group: 'length', multiplier: 1000000 },\n        { name: 'in', group: 'length', multiplier: 25.4 },\n        { name: 'ft', group: 'length', multiplier: 304.8 },\n\n        { name: 'g', group: 'weight', multiplier: 1 },\n        { name: 'dkg', group: 'weight', multiplier: 10 },\n        { name: 'kg', group: 'weight', multiplier: 1000 },\n        { name: 't', group: 'weight', multiplier: 1000000 },\n        { name: 'oz', group: 'weight', multiplier: 28.3495 },\n    ],\n    [\n        { name: '+', operation: (a, b) => a.plus(b) },\n        { name: '-', operation: (a, b) => a.minus(b) },\n        { name: '*', operation: (a, b) => a.times(b) },\n        { name: '/', operation: (a, b) => a.dividedBy(b) },\n        { name: '^', operation: (a, b) => a.pow(b) },\n    ],\n    [\n        { name: 'sum', operation: (xs) => Value.sum(xs) },\n        { name: 'average', operation: (xs) => Value.average(xs) },\n    ],\n);\n","import { Result } from '@badrap/result';\nimport { Value } from './Value';\n\nexport class Environment {\n    public constructor(\n        private readonly variables: Map<string, Value> = new Map(),\n        private readonly results: Array<Result<Value, Error>> = [],\n    ) {}\n\n    public setVariable(name: string, value: Value): void {\n        this.variables.set(name, value);\n    }\n\n    public getVariable(name: string): Result<Value, Error> {\n        const value = this.variables.get(name);\n        return value === undefined ? Result.err(new Error('Undefined variable ' + name)) : Result.ok(value);\n    }\n\n    public addResult(result: Result<Value, Error>): void {\n        this.results.push(result);\n    }\n\n    public getOutput(): string[] {\n        return this.results.map((result) => (result.isOk ? result.value.toString() : result.error.message));\n    }\n\n    public getAggregatorValues(): Value[] {\n        let values: Value[] = [];\n        for (const result of this.results) {\n            if (result.isErr) {\n                values = [];\n            } else {\n                values.push(result.value);\n            }\n        }\n        return values;\n    }\n}\n"],"names":["Result","_Result","unwrap","ok","err","r","this","_chain","value","error","isErr","map","chain","_Ok","_this","_Result2","call","isOk","_err","_Err","_Result3","_this2","_inheritsLoose","_ok","Error","all","obj","Array","isArray","res","i","length","item","push","keys","Object"],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}